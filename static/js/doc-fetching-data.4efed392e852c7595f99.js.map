{"version":3,"sources":["/home/runner/work/plant-3d-explorer/plant-3d-explorer/doc/helpers/functionFormatters.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/doc/components/functionTables.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/doc/fetchingData.mdx"],"names":["getArgs","func","fnstr","toString","args","match","comm","substring","lastIndexOf","res","split","map","d","replace","trim","filter","identifier","start","indexOf","length","descEnd","end","Infinity","desc","Tr","props","style","border","children","Th","padding","FunctionTables","functions","Object","keys","i","key","console","log","borderCollapse","Array","isArray","dangerouslySetInnerHTML","__html","layoutProps","MDXContent","components","mdxType","parentName","acc","isMDXComponent"],"mappings":"gVAAO,SAASA,EAASC,GACvB,IAAIC,EAAQD,EAAKE,WACbC,EAAOF,EAAMG,MAAM,4BACvB,IAAKD,EAAM,OACXA,EAAOA,EAAK,GAEZ,MAAME,EAAOJ,EAAMK,UACjBL,EAAMM,YAAY,OAClBN,EAAMM,YAAY,OAEpB,IAAKF,EAAM,OACX,MAAMG,EAAML,EAAKM,MAAM,KAAKC,IAAKC,GACnBA,EAAEC,QAAQ,aAAc,IAAIC,OAC7BJ,MAAM,KAAKC,IAAKC,GAAMA,EAAEE,SAClCC,OAAQH,GACFA,GACND,IAAKC,IACN,MAAMI,EAAa,KAAOJ,EAAE,GAAK,KAC3BK,EAAQX,EAAKY,QAAQF,GAAcA,EAAWG,OAC9CC,EAAUd,EAAKY,QAAQ,KAAMD,EAAQ,GACrCI,EAAMf,EAAKE,YAAY,KAAkB,IAAbY,EAAiBA,EAAWE,KAAY,EAO1E,OANIL,IAAUD,EAAWG,OAAS,IAChCP,EAAE,GAAKN,EAAKC,UACVU,EACAI,IAGGT,IAEHQ,EAAUd,EAAKY,QAAQ,MAI7B,MAAO,CAAEK,KAHIjB,EAAKC,UAChB,EAAGD,EAAKE,YAAY,KAAkB,IAAbY,EAAiBA,EAAWE,KAAY,GAE9ClB,KAAMK,G,oLC9B7B,MAAMe,EAAKC,GACT,wCAAQA,EAAR,CAAeC,MAAO,CAAEC,OAAQ,oBAC7BF,EAAMG,UAGLC,EAAKJ,GACT,wCAAQA,EAAR,CAAeC,MAAO,CAAEC,OAAQ,iBAAkBG,QAAS,MACxDL,EAAMG,UAGI,SAASG,EAAT,GAAyC,IAAhB,UAAEC,GAAa,EACrD,OAAO,6BAEHC,OAAOC,KAAKF,GAAWrB,IAAI,CAACC,EAAGuB,KAC7B,MAAM1B,EAAMT,EAAQgC,EAAUpB,IAC9B,OAAOH,EAAM,yBAAK2B,IAAKD,GACrB,gCAAMvB,EAAN,KACA,6CAGIyB,QAAQC,IAAI7B,GACJ,wCAAIA,GAAOA,EAAIL,MAAQK,EAAIL,KAAKe,QAAUV,EAAIL,KAAK,GAAG,GAC1D,2BAAOgC,IAAK3B,EAAI,GAAIiB,MAAO,CAC3Ba,eAAgB,aAEhB,+BACE,kBAACf,EAAD,KACE,kBAACK,EAAD,eACA,kBAACA,EAAD,wBACA,kBAACA,EAAD,wBAGJ,+BAGcW,MAAMC,QAAQhC,EAAIL,MACtBK,EAAIL,KAAKO,IAAKC,GACP,kBAACY,EAAD,CAAIY,IAAKxB,EAAE,IAChB,kBAACiB,EAAD,CACEa,wBAAyB,CACvBC,OAAQ/B,EAAE,MAEd,kBAACiB,EAAD,CAAIa,wBAAyB,CAC3BC,OAAQ/B,EAAE,IAAM,MAElB,kBAACiB,EAAD,CAAIa,wBAAyB,CAC3BC,OAAQ/B,EAAE,IAAM,QAGjB,OAIJ,qCACX,6CACA,uBAAG8B,wBAAyB,CAC1BC,OAASlC,GAAOA,EAAIc,KAAQd,EAAIc,KAAO,wBAIxC,Q,0LCpDjB,MAAMqB,EAAc,GAIL,SAASC,EAAT,GAGX,IAH+B,WACjCC,KACGrB,GACF,EACD,OAAO,YALS,UAKT,iBAAemB,EAAiBnB,EAAhC,CAAuCqB,WAAYA,EAAYC,QAAQ,cAE5E,kBACE,GAAM,iBACH,iBACL,qBAAK,kIACL,kBACE,GAAM,gBACH,gBACL,qBAAK,8DAA6D,0BAAYC,WAAW,KAAM,cAA2B,2EAE1H,qBAAK,iEACL,kBACE,GAAM,SACH,SACL,YAACjB,EAAD,CAAgBC,UAAWiB,EAAKF,QAAQ,oB,0KAK5CF,EAAWK,gBAAiB","file":"static/js/doc-fetching-data.5ee5e2a3.js","sourcesContent":["export function getArgs (func) {\n  let fnstr = func.toString()\n  let args = fnstr.match(/function\\s.*?\\(([^)]*)\\)/)\n  if (!args) return\n  args = args[1]\n\n  const comm = fnstr.substring(\n    fnstr.lastIndexOf('/**'),\n    fnstr.lastIndexOf('*/')\n  )\n  if (!comm) return\n  const res = args.split(',').map((d) => {\n    const str = d.replace(/\\/\\*.*\\*\\//, '').trim()\n    return str.split('=').map((d) => d.trim())\n  }).filter((d) => {\n    return d\n  }).map((d) => {\n    const identifier = '- ' + d[0] + ': '\n    const start = comm.indexOf(identifier) + identifier.length\n    const descEnd = comm.indexOf('- ', start + 1)\n    const end = comm.lastIndexOf('.', descEnd !== -1 ? descEnd : +Infinity) + 1\n    if (start !== identifier.length - 1) {\n      d[2] = comm.substring(\n        start,\n        end\n      )\n    }\n    return d\n  })\n  const descEnd = comm.indexOf('- ')\n  const desc = comm.substring(\n    3, comm.lastIndexOf('.', descEnd !== -1 ? descEnd : +Infinity) + 1\n  )\n  return { desc: desc, args: res }\n}\n","import React from 'react'\nimport { getArgs } from '../helpers/functionFormatters'\n\nconst Tr = props =>\n  <tr {...props} style={{ border: '1px solid gray' }} >\n    {props.children}\n  </tr>\n\nconst Th = props =>\n  <th {...props} style={{ border: '1px solid gray', padding: 10 }} >\n    {props.children}\n  </th>\n\nexport default function FunctionTables ({ functions }) {\n  return <div>\n    {\n      Object.keys(functions).map((d, i) => {\n        const res = getArgs(functions[d])\n        return res ? <div key={i}>\n          <h3> {d} </h3>\n          <h4> Parameters </h4>\n          {\n            (() => {\n              console.log(res)\n              return (<> {res && res.args && res.args.length && res.args[0][0]\n                ? <table key={res[0]} style={{\n                  borderCollapse: 'collapse'\n                }}>\n                  <thead>\n                    <Tr>\n                      <Th> name </Th>\n                      <Th> default value </Th>\n                      <Th> description </Th>\n                    </Tr>\n                  </thead>\n                  <tbody>\n                    {\n                      (() => {\n                        return (Array.isArray(res.args)\n                          ? res.args.map((d) => {\n                            return <Tr key={d[0]}>\n                              <Th\n                                dangerouslySetInnerHTML={{\n                                  __html: d[0]\n                                }} />\n                              <Th dangerouslySetInnerHTML={{\n                                __html: d[1] || ''\n                              }} />\n                              <Th dangerouslySetInnerHTML={{\n                                __html: d[2] || ''\n                              }} />\n                            </Tr>\n                          }) : null)\n                      })()\n                    }\n                  </tbody>\n                </table> : <p> None </p> }\n                <h4> Description </h4>\n                <p dangerouslySetInnerHTML={{\n                  __html: (res && res.desc) ? res.desc : 'No description.'\n                }} />\n                </>)\n            })()}\n        </div> : null\n      })\n    }\n  </div>\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport * as acc from 'flow/scans/accessors'\nimport { Playground } from 'docz'\nimport FunctionTables from './components/functionTables'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"fetching-data\"\n    }}>{`Fetching data`}</h1>\n    <p>{`This section is dedicated to explain how to make requests to the server in order to fetch the data necessary to display scans.`}</p>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Most of the things related to server requests are based in `}<inlineCode parentName=\"p\">{`flow/scans`}</inlineCode>{`.\nThere are a bunch of hooks there made to fetch data from the server.`}</p>\n    <p>{`The next sections explains and describes what each hook does.`}</p>\n    <h2 {...{\n      \"id\": \"hooks\"\n    }}>{`Hooks`}</h2>\n    <FunctionTables functions={acc} mdxType=\"FunctionTables\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}