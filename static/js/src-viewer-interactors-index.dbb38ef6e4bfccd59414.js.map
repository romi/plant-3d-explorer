{"version":3,"sources":["/home/runner/work/plant-3d-explorer/plant-3d-explorer/doc/components/objectFormatter.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/assets/ico.cameras.15x9.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/assets/ico.reset_view.14x14.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/styles/colors.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/flow/settings/accessors.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/rd/UI/Icon/index.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/rd/UI/Text/titles.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/styles/UI/Text/titles.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/icons/index.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/layers.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/flow/interactions/accessors.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/camera.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/panels.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/rd/UI/Buttons/index.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/Tools/index.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/rd/UI/Slider/index.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/tools.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/misc.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/rd/tools/hooks/mouse.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/overlay.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/pcdGroundTruth.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/index.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/Viewer/Interactors/index.mdx","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.background_color.21x21.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.bounding_box.21x21.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.crop.21x21.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.deselect.20x20.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.download.24x24.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.expand-white.14x14.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.internodes.21x21.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.mesh.21x21.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.paint.23x23.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.photoset.24x24.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.point_cloud.21x21.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.reset.25x25.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.ruler.21x21.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.segmented_point_cloud.21x21.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.shrink-white.14x14.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.skeleton.21x21.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.snap.24x24.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.zoom-in.14x14.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/common/assets/ico.zoom-out.14x14.svg","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/rd/UI/MenuBox/index.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/rd/UI/Tooltip/index.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/rd/tools/hooks/mutationObserver.js","/home/runner/work/plant-3d-explorer/plant-3d-explorer/src/rd/tools/hooks/bb.js"],"names":["Block","styled","pre","backgroundColor","borderRadius","padding","fontSize","ObjectFormatter","object","JSON","stringify","module","exports","green","blue","red","orange","grey","useResetSettings","useAccessor","value","type","useLayers","state","settings","layers","usePanels","panels","useEvaluation","evaluation","useLayerTools","layerTools","useMisc","misc","useCarousel","carousel","defaultRules","default","hover","active","Container","div","display","props","rules","hovered","isHovered","activated","isActivated","Icon","className","src","raw","alt","IconHOC","comp","newComp","memo","icon","StateCatcherContainer","width","height","IconStateCatcher","setHovered","useState","setActivated","newChildren","Children","map","children","child","condition","action","cloneElement","style","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","H1Rules","lineHeight","fontWeight","H1","h1","H2Rules","H2","h2","H3Rules","letterSpacing","color","H3","h3","rdH1","rdH2","rdH3","textTransform","fill","MeshIcon","meshRaw","PointCloudIcon","pointCloudRaw","SegmentedPointCloudIcon","segmentedPointCloudRaw","SkeletonIcon","skeletonRaw","InternodesIcon","internodesRaw","CamerasIcon","camerasRaw","ResetIcon","resertRaw","ExpandIcon","expandRaw","ShrinkIcon","shrinkRaw","PaintIcon","paintRaw","SnapIcon","snapRaw","PhotoSetIcon","photoSetRaw","RulerIcon","rulerRaw","BackgroundColorIcon","backgroundColorRaw","ZoomInIcon","zoomInRaw","ZoomOutIcon","zoomOutRaw","BoundingBoxIcon","boundingBoxRaw","CropIcon","cropRaw","position","top","left","LayersInteractors","setLayers","scan","useScan","meshGeometry","pointCloudGeometry","useScanFiles","segmentedPointCloud","useSegmentedPointCloud","Tooltip","Interactor","isDisabled","mesh","onClick","justifyContent","alignItems","id","pointCloud","data","skeleton","angles","axisAlignedBoundingBox","useResetInteraction","useHoveredCamera","interactions","hoveredCamera","useSelectedcamera","selectedCamera","useHoveredAngle","hoveredAngle","useSelectedAngle","selectedAngle","useColor","colors","useDefaultColors","useSnapshot","snapshot","useReset2dView","reset2dViewFn","useReset3dView","reset3dViewFn","useOrganInfo","organInfo","useSelectedPoints","selectedPoints","useClickedPoint","clickedPoint","useLabels","labels","useSelectedLabel","selectedLabel","useSelectionMethod","selectionMethod","useRuler","ruler","useAxisAlignedBoundingBox","aabb","usePointCloudZoom","pointCloudZoom","usePointCloudSize","pointCloudSize","CameraContainer","right","CameraInteractors","reset2dView","reset3dView","cameras","isButton","fn","ExpandBtn","List","Option","OptionText","ListHeader","PanelsInteractor","setPanels","isOpen","setIsOpen","useEffect","onOutsideClick","window","addEventListener","removeEventListener","stopPropagation","useCallback","e","togglFn","v","isPanelUsable","Object","keys","reduce","p","c","get","validePanels","d","filter","length","key","ResetButton","backgroundImage","resetArrow","marginLeft","marginRight","marginTop","cursor","transition","transform","tools","colorPickers","organs","background","photoSets","ToolButton","toolsList","setToolsList","closeTool","activeTool","tool","MenuBox","activate","callOnChange","watchChange","layer","onClose","menuBox","interactor","tooltipId","Slider","React","Component","constructor","super","this","callback","min","max","step","handleChange","bind","event","setState","target","render","defaultValue","onChange","hex2RGB","hex","r","parseInt","g","b","LegendContainer","flexDirection","ColumnContainer","visibility","displayed","ToolContainer","defaults","defaultOrgan1Color","defaultOrgan2Color","defaultOrganOpacity","defaultMeshColor","defaultMeshOpacity","defaultPointCloudColor","defaultPointCloudOpacity","defaultPointCloudSize","defaultSkeletonColor","defaultSkeletonOpacity","localStorage","getItem","setItem","MiscInteractors","setColors","resetDefaultColor","setLabels","segmentation","legendPicker","setLegendPicker","setPointCloudZoom","setPointCloudSize","index","self","indexOf","rgb","a","toString","i","disableAlpha","val","copy","slice","undefined","color2","hsl","l","color2String","Math","round","h","s","next","globalOrganColors","pointCloudGroundTruth","level","sampleSize","ChooserContainer","PhotoSetButtonContainer","textAlign","marginBottom","boxShadow","opacity","MiscContainer","InputResolution","input","border","borderBottom","MozAppearance","WebkitAppearance","margin","outline","outlineOffset","HoverContainer","SnapButtonImage","snapButton","backgroundSize","DownloadButtonImage","from","to","animation","downloadButton","Point3D","setAABB","gridTemplateColumns","gridTemplateRows","gridGap","gridColumn","x","isNaN","y","z","PhotoSetButton","set","setCarousel","photoSet","toLowerCase","DownloadButton","SnapButton","GenerateDownloadButton","href","image","download","data-testid","onGenerateClick","ImagePreview","maxWidth","setSnapshot","snapWidth","setSnapWidth","snapHeight","setSnapHeight","setMisc","setRuler","snapResolution","minWidth","enforceReset","text","bounding_box","parseFloat","justifyItems","placeholder","scale","scaling","measuring","scaleSet","measure","toFixed","readOnly","alignContent","trueResolution","useMouse","handler","clientX","clientY","useElementMouse","element","layerX","layerY","current","ContextMenuContainer","zIndex","pos","MenuContainer","OptionContainer","whiteSpace","OptionTitle","Bubble","bubbleColor","handleMouseMove","dragging","setPos","pageX","rel","pageY","document","button","setDragging","setRel","mixBlendMode","values","ORGAN_NUMBER","ContextMenu","setSelectedPoints","setSelectionMethod","setClickedPoint","point","LabelMenu","setSelectedLabel","OverlayInteractors","tempBubblePos","setTempBubblePos","setOrganInfo","bubblePositions","setBubblePositions","contextPosition","setContextPosition","draggingBubble","setDraggingBubble","mouse","onAnyClick","bottom","GroundTruthInteractors","pointCloudGroundTruthGeometry","omit","userDrag","userSelect","Color","alpha","DocInteractor","divStyle","layoutProps","MDXContent","components","mdxType","parentName","of","__position","__code","__scope","Props","Playground","SketchPicker","__codesandbox","setActive","isMDXComponent","InvisibleContent","pointerEvents","Close","closePicto","contentRef","useRef","ref","BB","useBB","contentBb","setContentBb","Array","isArray","childrenWithoutContent","MenuBoxContent","childrenWithContent","getBoundingClientRect","parentBb","ContentContainer","innerWidth","InivisibleContent","TooltipContent","childrenContent","config","attributes","characterData","subtree","childList","useMutationObserver","options","observer","MutationObserver","mutationList","console","log","observe","disconnect","obeserver","setValue"],"mappings":"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","file":"static/js/src-viewer-interactors-index.c80103ad.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Block = styled.pre({\n  backgroundColor: '#AAAAAA30',\n  borderRadius: 10,\n  padding: 10,\n  fontSize: 16\n})\n\nexport default function ObjectFormatter ({ object }) {\n  return (\n    <Block>\n      <code>\n        {\n          JSON.stringify(object, null, 2)\n        }\n      </code>\n    </Block>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/img/ico.cameras.15x9.7bc2a5fd.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.reset_view.14x14.91f3a67a.svg\";","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nexport const green = '#00A960'\nexport const darkGreen = '#3A4D45'\nexport const blue = '#4200FF'\nexport const red = '#FF555F'\n\nexport const orange = '#FF8400'\n\nexport const grey = '#97ACA3'\nexport const lightGrey = '#ECF3F0'\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport useAccessor from 'rd/tools/hooks/accessor'\n\nexport const useResetSettings = useAccessor(\n  [],\n  [\n    (value) => ({\n      type: 'RESET_SETTINGS',\n      value\n    })\n  ]\n)\n\nexport const useLayers = useAccessor(\n  [\n    (state) => {\n      return state.settings.layers\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_LAYERS',\n      value\n    })\n  ]\n)\n\nexport const usePanels = useAccessor(\n  [\n    (state) => {\n      return state.settings.panels\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_PANELS',\n      value\n    })\n  ]\n)\n\nexport const useEvaluation = useAccessor(\n  [\n    (state) => {\n      return state.settings.evaluation\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_EVALUATION',\n      value\n    })\n  ]\n)\n\nexport const useLayerTools = useAccessor(\n  [\n    (state) => {\n      return state.settings.layerTools\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_LAYER_TOOLS',\n      value\n    })\n  ]\n)\n\nexport const useMisc = useAccessor(\n  [\n    (state) => {\n      return state.settings.misc\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_MISC',\n      value\n    })\n  ]\n)\n\nexport const useCarousel = useAccessor(\n  [\n    (state) => {\n      return state.settings.carousel\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_CAROUSEL',\n      value\n    })\n  ]\n)\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport React, { useState, Children, cloneElement, memo } from 'react'\nimport styled from '@emotion/styled'\n\nconst defaultRules = {\n  default: {},\n  hover: {},\n  active: {}\n}\n\nconst Container = styled.div({\n  display: 'inline-block',\n\n  '& svg': {\n    display: 'block'\n  }\n}, (props) => {\n  return {\n    ...props.rules.default,\n    ...(\n      props.hovered || props.isHovered\n        ? props.rules.hover\n        : {\n          '&:hover': props.rules.hover\n        }\n    ),\n    ...(\n      (props.activated || props.isActivated)\n        ? props.rules.active\n        : {\n          '&:active': props.rules.active\n        }\n    )\n  }\n})\n\nexport default function Icon (props) {\n  return <Container\n    className={'icon'}\n    hovered={props.hovered}\n    isHovered={props.isHovered}\n    isActivated={props.isActivated}\n    activated={props.activated}\n    rules={{\n      ...defaultRules,\n      ...(props.rules || {})\n    }}\n  >\n    <img src={props.raw} alt={props.alt} />\n  </Container>\n}\n\nexport function IconHOC (comp) {\n  const newComp = memo(comp)\n  newComp.icon = true\n  return newComp\n}\n\nconst childWalker = (child, condition, action) => {\n  return Children.map(\n    child,\n    (comp) => {\n      if (typeof comp === 'object') {\n        if (condition(comp)) {\n          return action(comp)\n        } else {\n          return comp\n        }\n      } else {\n        return comp\n      }\n    }\n  )\n}\n\nconst StateCatcherContainer = styled.div({\n  width: '100%',\n  height: '100%'\n})\n\nexport function IconStateCatcher (props) {\n  const [hovered, setHovered] = useState(false)\n  const [activated, setActivated] = useState(false)\n\n  const newChildren = Children.map(\n    props.children,\n    (comp) => {\n      return childWalker(\n        comp,\n        (comp) => comp.type && comp.type.icon,\n        (comp) => cloneElement(comp, { hovered, activated })\n      )\n    }\n  )\n\n  return <StateCatcherContainer\n    className={props.className || ''}\n    style={props.style || {}}\n    onMouseEnter={() => setHovered(true)}\n    onMouseLeave={() => setHovered(false)}\n    onMouseDown={() => setActivated(true)}\n    onMouseUp={() => setActivated(false)}\n  >\n    {newChildren}\n  </StateCatcherContainer>\n}\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport styled from '@emotion/styled'\n\nexport const H1Rules = {\n  fontSize: 34,\n  lineHeight: '28px',\n  fontWeight: 'normal'\n}\nexport const H1 = styled.h1(H1Rules)\n\nexport const H2Rules = {\n  fontSize: 18,\n  lineHeight: '22px',\n  fontWeight: 'normal'\n}\nexport const H2 = styled.h2(H2Rules)\n\nexport const H3Rules = {\n  fontSize: 11,\n  letterSpacing: 1,\n  lineHeight: '28px',\n  color: 'blue',\n  fontWeight: 'normal'\n}\nexport const H3 = styled.h3(H3Rules)\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport styled from '@emotion/styled'\n\nimport {\n  H1 as rdH1,\n  H2 as rdH2,\n  H3 as rdH3\n} from 'rd/UI/Text/titles'\n\nimport { grey, green, darkGreen } from '../../colors'\n\nexport const H1 = styled(rdH1)({\n  color: green,\n  lineHeight: 'normal'\n})\n\nexport const H2 = styled(rdH2)({\n  color: darkGreen,\n  lineHeight: 'normal'\n})\n\nexport const H3 = styled(rdH3)({\n  fontWeight: 500,\n  textTransform: 'uppercase',\n  color: grey,\n  lineHeight: 'normal'\n})\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport React from 'react'\nimport Icon, { IconHOC } from 'rd/UI/Icon'\n\nimport { green } from 'common/styles/colors'\n\nimport meshRaw from 'common/assets/ico.mesh.21x21.svg'\nimport pointCloudRaw from 'common/assets/ico.point_cloud.21x21.svg'\nimport skeletonRaw from 'common/assets/ico.skeleton.21x21.svg'\nimport internodesRaw from 'common/assets/ico.internodes.21x21.svg'\nimport camerasRaw from 'Viewer/Interactors/assets/ico.cameras.15x9.svg'\nimport resertRaw from 'Viewer/Interactors/assets/ico.reset_view.14x14.svg'\nimport expandRaw from 'common/assets/ico.expand-white.14x14.svg'\nimport shrinkRaw from 'common/assets/ico.shrink-white.14x14.svg'\nimport paintRaw from 'common/assets/ico.paint.23x23.svg'\nimport snapRaw from 'common/assets/ico.snap.24x24.svg'\nimport segmentedPointCloudRaw from 'common/assets/ico.segmented_point_cloud.21x21.svg'\nimport photoSetRaw from 'common/assets/ico.photoset.24x24.svg'\nimport rulerRaw from 'common/assets/ico.ruler.21x21.svg'\nimport backgroundColorRaw from 'common/assets/ico.background_color.21x21.svg'\nimport zoomInRaw from 'common/assets/ico.zoom-in.14x14.svg'\nimport zoomOutRaw from 'common/assets/ico.zoom-out.14x14.svg'\nimport boundingBoxRaw from 'common/assets/ico.bounding_box.21x21.svg'\nimport cropRaw from 'common/assets/ico.crop.21x21.svg'\n\nconst rules = (props) => ({\n  default: {\n    '& path, & polygon, & rect': {\n      fill: 'white'\n    },\n    display: 'flex'\n  },\n  active: {\n    '& path, & polygon, & rect': {\n      fill: (props.isActivated && props.activated)\n        ? 'white'\n        : green\n    }\n  }\n})\n\nexport const MeshIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={meshRaw}\n    alt='mesh icon'\n  />\n})\n\nexport const PointCloudIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={pointCloudRaw}\n    alt='point cloud icon'\n  />\n})\n\nexport const SegmentedPointCloudIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={segmentedPointCloudRaw}\n    alt='segmented point cloud icon'\n  />\n})\n\nexport const SkeletonIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={skeletonRaw}\n    alt='skeleton icon'\n  />\n})\n\nexport const InternodesIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={internodesRaw}\n    alt='angles icon'\n  />\n})\n\nexport const CamerasIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={camerasRaw}\n    alt='cameras icon'\n  />\n})\n\nexport const ResetIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={resertRaw}\n    alt='reset icon'\n  />\n})\n\nexport const ExpandIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={expandRaw}\n    alt='expand icon'\n  />\n})\n\nexport const ShrinkIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={shrinkRaw}\n    alt='shrink icon'\n  />\n})\n\nexport const PaintIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={paintRaw}\n    alt='paint icon'\n  />\n})\n\nexport const SnapIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={snapRaw}\n    alt='snap icon'\n  />\n})\n\nexport const PhotoSetIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={photoSetRaw}\n    alt='photoset icon'\n  />\n})\n\nexport const RulerIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={rulerRaw}\n    alt='ruler icon'\n  />\n})\n\nexport const BackgroundColorIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={backgroundColorRaw}\n    alt='background color icon'\n  />\n})\n\nexport const ZoomInIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={zoomInRaw}\n    alt='point cloud zoom in icon'\n  />\n})\n\nexport const ZoomOutIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={zoomOutRaw}\n    alt='point cloud zoom out icon'\n  />\n})\n\nexport const BoundingBoxIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={boundingBoxRaw}\n    alt='bounding box icon'\n  />\n})\n\nexport const CropIcon = IconHOC((props) => {\n  return <Icon\n    {...props}\n    rules={rules(props)}\n    raw={cropRaw}\n    alt='crop icon'\n  />\n})\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { FormattedMessage } from 'react-intl'\nimport { useLayers } from 'flow/settings/accessors'\nimport { useScan, useScanFiles,\n  useSegmentedPointCloud } from 'flow/scans/accessors'\n\nimport Tooltip, { TooltipContent } from 'rd/UI/Tooltip'\nimport { IconStateCatcher } from 'rd/UI/Icon'\n\nimport { H3 } from 'common/styles/UI/Text/titles'\n\nimport { Interactor } from './index'\nimport { MeshIcon, PointCloudIcon, SegmentedPointCloudIcon,\n  SkeletonIcon, InternodesIcon, BoundingBoxIcon } from './icons'\n\nexport const Container = styled.div({\n  position: 'absolute',\n  top: 20,\n  left: 20,\n  display: 'flex',\n\n  '& :first-of-type > div': {\n    borderRadius: '2px 0 0 2px'\n  },\n\n  '& :last-of-type > div': {\n    borderRadius: '0 2px 2px 0'\n  }\n})\n\nexport default function LayersInteractors () {\n  const [layers, setLayers] = useLayers()\n  const [scan] = useScan()\n  const [[meshGeometry], [pointCloudGeometry]] = useScanFiles(scan)\n  const [segmentedPointCloud] = useSegmentedPointCloud()\n\n  return <Container>\n    <Tooltip>\n      <Interactor\n        isDisabled={!meshGeometry}\n        activated={layers.mesh}\n        onClick={() => setLayers({ ...layers, mesh: !layers.mesh })}\n      >\n        <IconStateCatcher style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }} >\n          <MeshIcon isActivated={layers.mesh} />\n        </IconStateCatcher>\n      </Interactor>\n      <TooltipContent>\n        <H3>\n          <FormattedMessage id='tooltip-mesh' />\n        </H3>\n      </TooltipContent>\n    </Tooltip>\n\n    <Tooltip>\n      <Interactor\n        isDisabled={!pointCloudGeometry}\n        activated={layers.pointCloud}\n        onClick={() => setLayers({ ...layers, pointCloud: !layers.pointCloud })}\n      >\n        <IconStateCatcher style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }} >\n          <PointCloudIcon isActivated={layers.pointCloud} />\n        </IconStateCatcher>\n      </Interactor>\n      <TooltipContent>\n        <H3>\n          <FormattedMessage id='tooltip-pointcloud' />\n        </H3>\n      </TooltipContent>\n    </Tooltip>\n\n    <Tooltip>\n      <Interactor\n        isDisabled={!segmentedPointCloud}\n        activated={layers.segmentedPointCloud}\n        onClick={() => setLayers({\n          ...layers,\n          segmentedPointCloud: !layers.segmentedPointCloud\n        })} >\n        <IconStateCatcher style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }} >\n          <SegmentedPointCloudIcon isActivated={layers.segmentedPointCloud} />\n        </IconStateCatcher>\n      </Interactor>\n      <TooltipContent>\n        <H3>\n          <FormattedMessage id='tooltip-segmentedpointcloud' />\n        </H3>\n      </TooltipContent>\n    </Tooltip>\n\n    <Tooltip>\n      <Interactor\n        isDisabled={!(scan && scan.data.skeleton)}\n        activated={layers.skeleton}\n        onClick={() => setLayers({ ...layers, skeleton: !layers.skeleton })}\n      >\n        <IconStateCatcher style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }} >\n          <SkeletonIcon isActivated={layers.skeleton} />\n        </IconStateCatcher>\n      </Interactor>\n      <TooltipContent>\n        <H3>\n          <FormattedMessage id='tooltip-skeleton' />\n        </H3>\n      </TooltipContent>\n    </Tooltip>\n\n    <Tooltip>\n      <Interactor\n        isDisabled={!(scan && scan.data.angles)}\n        activated={layers.angles}\n        onClick={() => setLayers({ ...layers, angles: !layers.angles })}\n      >\n        <IconStateCatcher style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }} >\n          <InternodesIcon isActivated={layers.angles} />\n        </IconStateCatcher>\n      </Interactor>\n      <TooltipContent>\n        <H3>\n          <FormattedMessage id='tooltip-layer-aabb' />\n        </H3>\n      </TooltipContent>\n    </Tooltip>\n    <Tooltip>\n      <Interactor\n        isDisabled={!pointCloudGeometry}\n        activated={layers.axisAlignedBoundingBox}\n        onClick={() => setLayers({ ...layers, axisAlignedBoundingBox: !layers.axisAlignedBoundingBox })}\n      >\n        <IconStateCatcher style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }} >\n          <BoundingBoxIcon isActivated={layers.axisAlignedBoundingBox} />\n        </IconStateCatcher>\n      </Interactor>\n      <TooltipContent>\n        <H3>\n          <FormattedMessage id='tooltip-layer-aabb' />\n        </H3>\n      </TooltipContent>\n    </Tooltip>\n  </Container>\n}\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport useAccessor from 'rd/tools/hooks/accessor'\n\nexport const useResetInteraction = useAccessor(\n  [],\n  [\n    (value) => ({\n      type: 'RESET_INTERACTIONS',\n      value\n    })\n  ]\n)\n\nexport const useHoveredCamera = useAccessor(\n  [\n    (state) => {\n      return state.interactions.hoveredCamera\n    }\n  ],\n  [\n    (value) => ({\n      type: 'HOVER_CAMERA',\n      value\n    })\n  ]\n)\nexport const useSelectedcamera = useAccessor(\n  [\n    (state) => {\n      return state.interactions.selectedCamera\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SELECT_CAMERA',\n      value\n    })\n  ]\n)\n\nexport const useHoveredAngle = useAccessor(\n  [\n    (state) => {\n      return state.interactions.hoveredAngle\n    }\n  ],\n  [\n    (value) => ({\n      type: 'HOVER_ANGLE',\n      value\n    })\n  ]\n)\nexport const useSelectedAngle = useAccessor(\n  [\n    (state) => {\n      return state.interactions.selectedAngle\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SELECT_ANGLE',\n      value\n    })\n  ]\n)\n\nexport const useColor = useAccessor(\n  [\n    (state) => {\n      return state.interactions.colors\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_COLORS',\n      value\n    })\n  ]\n)\n\nexport const useDefaultColors = useAccessor(\n  [],\n  [\n    (value) => ({\n      type: 'RESTORE_DEFAULT_COLOR',\n      value\n    })\n  ]\n)\n\nexport const useSnapshot = useAccessor(\n  [\n    (state) => {\n      return state.interactions.snapshot\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_SNAPSHOT',\n      value\n    })\n  ]\n)\n\nexport const useReset2dView = useAccessor(\n  [\n    (state) => {\n      return state.interactions.reset2dViewFn\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_RESET_2D_VIEW',\n      value\n    })\n  ]\n)\n\nexport const useReset3dView = useAccessor(\n  [\n    (state) => {\n      return state.interactions.reset3dViewFn\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_RESET_3D_VIEW',\n      value\n    })\n  ]\n)\n\nexport const useOrganInfo = useAccessor(\n  [\n    (state) => {\n      return state.interactions.organInfo\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_ORGAN_INFO',\n      value\n    })\n  ]\n)\n\nexport const useSelectedPoints = useAccessor(\n  [\n    (state) => {\n      return state.interactions.selectedPoints\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_SELECTED_POINTS',\n      value\n    })\n  ]\n)\n\nexport const useClickedPoint = useAccessor(\n  [\n    (state) => {\n      return state.interactions.clickedPoint\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_CLICKED_POINT',\n      value\n    })\n  ]\n)\n\nexport const useLabels = useAccessor(\n  [\n    (state) => {\n      return state.interactions.labels\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_LABELS',\n      value\n    })\n  ]\n)\n\nexport const useSelectedLabel = useAccessor(\n  [\n    (state) => {\n      return state.interactions.selectedLabel\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_SELECTED_LABEL',\n      value\n    })\n  ]\n)\n\nexport const useSelectionMethod = useAccessor(\n  [\n    (state) => {\n      return state.interactions.selectionMethod\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_SELECTION_METHOD',\n      value\n    })\n  ]\n)\n\n/**\n * Value should look like this\n * {\n *   topPoint : { x : <num>, y: <num>, z : <num> },\n *   bottomPoint : { x : <num>, y: <num>, z : <num> }\n * }\n */\nexport const useRuler = useAccessor(\n  [\n    (state) => {\n      return state.interactions.ruler\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_RULER',\n      value\n    })\n  ]\n)\n\nexport const useAxisAlignedBoundingBox = useAccessor(\n  [\n    (state) => {\n      return state.interactions.aabb\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_AABB',\n      value\n    })\n  ]\n)\n\nexport const usePointCloudZoom = useAccessor(\n  [\n    (state) => {\n      return state.interactions.pointCloudZoom\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_POINT_CLOUD_ZOOM',\n      value\n    })\n  ]\n)\n\nexport const usePointCloudSize = useAccessor(\n  [\n    (state) => {\n      return state.interactions.pointCloudSize\n    }\n  ],\n  [\n    (value) => ({\n      type: 'SET_POINT_CLOUD_SIZE',\n      value\n    })\n  ]\n)\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { FormattedMessage } from 'react-intl'\n\nimport { useReset2dView, useReset3dView, useSelectedcamera } from 'flow/interactions/accessors'\nimport { useLayers } from 'flow/settings/accessors'\n\nimport { H3 } from 'common/styles/UI/Text/titles'\n\nimport Tooltip, { TooltipContent } from 'rd/UI/Tooltip'\nimport { IconStateCatcher } from 'rd/UI/Icon'\n\nimport { CamerasIcon, ResetIcon } from './icons'\nimport { Interactor } from './index'\n\nexport const Container = styled.div({\n  position: 'absolute',\n  top: 20,\n  left: 20,\n  display: 'flex',\n\n  '& :first-of-type > div': {\n    borderRadius: '2px 0 0 2px'\n  },\n\n  '& :last-of-type > div': {\n    borderRadius: '0 2px 2px 0'\n  }\n})\n\nconst CameraContainer = styled(Container)({\n  left: 'auto',\n  right: '50%'\n})\n\nexport default function CameraInteractors () {\n  const [layers, setLayers] = useLayers()\n  const [reset2dView] = useReset2dView()\n  const [reset3dView] = useReset3dView()\n  const [selectedCamera] = useSelectedcamera()\n\n  return <CameraContainer>\n    {\n      !selectedCamera && <Tooltip>\n        <Interactor\n          activated={layers.cameras}\n          onClick={() => setLayers({ ...layers, cameras: !layers.cameras })}\n        >\n          <IconStateCatcher style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }} >\n            <CamerasIcon isActivated={layers.cameras} />\n          </IconStateCatcher>\n        </Interactor>\n        <TooltipContent>\n          <H3>\n            <FormattedMessage\n              id={\n                layers.cameras\n                  ? 'tooltip-cameras-hide'\n                  : 'tooltip-cameras-show'\n              }\n            />\n          </H3>\n        </TooltipContent>\n      </Tooltip>\n    }\n\n    <Tooltip>\n      <Interactor\n        isButton\n        activated={false}\n        onClick={() => selectedCamera\n          ? (reset2dView && reset2dView.fn())\n          : (reset3dView && reset3dView.fn())\n        }\n      >\n        <IconStateCatcher style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }} >\n          <ResetIcon />\n        </IconStateCatcher>\n      </Interactor>\n      <TooltipContent>\n        <H3>\n          <FormattedMessage id='tooltip-reset' />\n        </H3>\n      </TooltipContent>\n    </Tooltip>\n\n  </CameraContainer>\n}\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport styled from '@emotion/styled'\nimport { get } from 'lodash'\n\nimport { usePanels } from 'flow/settings/accessors'\nimport { useScan } from 'flow/scans/accessors'\n\nimport { green, darkGreen } from 'common/styles/colors'\nimport { H3 } from 'common/styles/UI/Text/titles'\n\nimport { ExpandIcon, ShrinkIcon } from './icons'\n\nconst Container = styled.div`\n  position: absolute;\n  top: 35px;\n  right: 1px;\n  display: flex;\n  letter-spacing: 0px;\n`\n\nconst ExpandBtn = styled.div`\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  background: ${green};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    filter: saturate(130%);\n  }\n\n  &:active {\n    background: ${darkGreen};\n  }\n`\n\nconst List = styled.div`\n`\nconst Option = styled.div`\n  cursor: pointer;\n  padding-right: 0px;\n  width: 160px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: white;\n  padding-left: 15px;\n  height: 40px;\n\n  &:hover {\n    background: ${green};\n\n    span {\n      color: white;\n    }\n  }\n\n  &:active {\n    background: ${darkGreen};\n\n    span {\n      color: white;\n    }\n  }\n`\nconst OptionText = styled(H3)`\n  margin: 0px;\n  text-transform: none;\n  color: ${green};\n  letter-spacing: 0px;\n`\n\nconst ListHeader = styled(Option)`\n  background: ${green};\n  cursor: default;\n\n  span {\n    color: white;\n  }\n\n  &:active {\n    background: ${green};\n\n    span {\n      color: white;\n    }\n  }\n`\n\nexport default function PanelsInteractor () {\n  const [panels, setPanels] = usePanels()\n  const [isOpen, setIsOpen] = useState(false)\n  const [scan] = useScan()\n\n  useEffect(() => {\n    const onOutsideClick = () => setIsOpen(false)\n    if (isOpen) window.addEventListener('click', onOutsideClick)\n    return () => window.removeEventListener('click', onOutsideClick)\n  }, [isOpen])\n\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation()\n  }, [])\n\n  const togglFn = useCallback(() => {\n    setIsOpen((v) => !v)\n  }, [setIsOpen])\n\n  const isPanelUsable = {\n    ...(\n      Object.keys(panels).reduce((p, c) => {\n        p[c] = true\n        return p\n      }, {})\n    ),\n    'panels-angles': !!get(scan, 'data.angles.angles'),\n    'panels-distances': !!get(scan, 'data.angles.internodes'),\n    'panels-evaluation': !!get(scan, 'data.segmentation2D') || !!get(scan, 'data.segmentedPcdEvaluation')\n  }\n\n  const validePanels = Object\n    .keys(panels)\n    .reduce((p, c) => {\n      if (isPanelUsable[c]) p[c] = panels[c]\n      return p\n    }, {})\n\n  const haveOptions = Object.keys(validePanels)\n    .map((d) => panels[d])\n    .filter((d) => !d)\n    .length\n\n  if (!haveOptions) return null\n\n  return <Container onClick={stopPropagation}>\n    {\n      isOpen\n        ? (\n          <List>\n            <ListHeader>\n              <OptionText>\n                <FormattedMessage id='panels-add' />\n              </OptionText>\n              <ExpandBtn onClick={togglFn}>\n                <ShrinkIcon />\n              </ExpandBtn>\n            </ListHeader>\n\n            {\n              Object.keys(validePanels)\n                .filter((id) => !panels[id])\n                .map((d) => {\n                  return (\n                    <Option\n                      key={d}\n                      onClick={(e) => {\n                        setPanels({\n                          ...panels,\n                          [d]: true\n                        })\n                        setIsOpen(false)\n                      }}\n                    >\n                      <OptionText>\n                        <FormattedMessage id={d} />\n                      </OptionText>\n                    </Option>\n                  )\n                })\n            }\n          </List>\n        )\n        : (\n          <ExpandBtn onClick={togglFn}>\n            <ExpandIcon />\n          </ExpandBtn>\n        )\n    }\n  </Container>\n}\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport styled from '@emotion/styled'\n\nimport resetArrow from 'common/assets/ico.reset.25x25.svg'\n\nexport const ResetButton = styled.div({\n  backgroundImage: `url(${resetArrow})`,\n  width: 25,\n  height: 25,\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  marginTop: 10,\n  cursor: 'pointer',\n  transition: 'transform 0.5s ease',\n  transform: 'rotate(0deg)',\n  '&:hover': {\n    transition: 'transform 0.5s ease',\n    transform: 'rotate(-360deg)'\n  }\n})\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport Tooltip, { TooltipContent } from 'rd/UI/Tooltip'\nimport MenuBox, { MenuBoxContent } from 'rd/UI/MenuBox'\nimport { IconStateCatcher } from 'rd/UI/Icon'\nimport { H3 } from 'common/styles/UI/Text/titles'\nimport { Interactor } from 'Viewer/Interactors'\n\nimport t from 'prop-types'\n\nexport const tools = {\n  colorPickers: {\n    mesh: 0,\n    pointCloud: 1,\n    skeleton: 2,\n    organs: 3,\n    background: 4,\n    segmentedPointCloud: 5\n  },\n  misc: {\n    ruler: 6,\n    aabb: 7,\n    snapshot: 8,\n    photoSets: 9\n  }\n}\n\n/* A general component for displaying tools that can\n  be popped up when clicked.\n  The tool prop has to be a member of the tools \"enum\".\n\n  At least the toolsList and tooltipId properties must be provided\n*/\nexport default function ToolButton (props) {\n  const [toolsList, setToolsList] = props.toolsList\n\n  const closeTool = () => {\n    if (toolsList.activeTool === props.tool) {\n      setToolsList({ ...toolsList, activeTool: null })\n    }\n  }\n\n  return <MenuBox\n    activate={toolsList.activeTool === props.tool}\n    callOnChange={closeTool}\n    watchChange={[props.layer]}\n    onClose={closeTool}\n    {...props.menuBox}\n  >\n    <Tooltip>\n      <Interactor\n        activated={toolsList.activeTool === props.tool}\n        onClick={\n          () => {\n            setToolsList({ ...toolsList,\n              activeTool: toolsList.activeTool === props.tool\n                ? null\n                : props.tool\n            })\n          }\n        }\n        {...props.interactor}\n      >\n        <IconStateCatcher style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}>\n          {props.icon}\n        </IconStateCatcher>\n      </Interactor>\n      <TooltipContent>\n        <H3>\n          <FormattedMessage id={props.tooltipId} />\n        </H3>\n      </TooltipContent>\n    </Tooltip>\n    <MenuBoxContent style={{\n      padding: 10\n    }} >\n      {props.children}\n    </MenuBoxContent>\n  </MenuBox>\n}\n\nToolButton.propTypes = {\n  /**\n  * An array with 2 elements :\n  * - An object with the field `activeTool`.\n  * - A function to change this object.\n  * In practice, this is the return value of an\n  * accessor hook (see Redux)\n  */\n  toolsList: t.array,\n  /**\n  * An integer representing the tool.\n  */\n  tool: t.number,\n  /**\n  * A bool representing whether the layer this tool is in is activated or not.\n  */\n  layer: t.bool,\n  /**\n  * An object representing props to pass to the MenuBox component that is\n  * rendered by the ToolButton\n  */\n  menuBox: t.object,\n  /**\n  * An object representing props to pass to the Interactor component\n  * that is rendered by the ToolButton.\n   */\n  interactor: t.object,\n  /**\n  * The icon to display on the interactor.\n  */\n  icon: t.object,\n  /**\n  * The id of the text to display in the Tooltip (when hovering the ToolButton)\n  */\n  tooltipId: t.string\n}\n","import React from 'react'\n\nexport default class Slider extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      value: 1,\n      callback: props.callback,\n      min: props.min && props.min > 0 ? props.min : 1,\n      max: props.min && props.max > 0 ? props.max : 1,\n      default: props.default && props.default > 0 ? props.default : 1,\n      step: props.step && props.step !== 0 ? props.step : 1\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange (event) {\n    this.setState({ value: event.target.value })\n    this.state.callback(event.target.value)\n  }\n\n  render () {\n    return <input\n      type='range'\n      min={this.state.min}\n      max={this.state.max}\n      defaultValue={this.state.default}\n      step={this.state.step}\n      onChange={this.handleChange} />\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport { SketchPicker } from 'react-color'\nimport { FormattedMessage } from 'react-intl'\n\nimport {\n  useSelectedAngle,\n  useColor,\n  useDefaultColors,\n  usePointCloudZoom,\n  usePointCloudSize\n} from 'flow/interactions/accessors'\nimport { useLayerTools, useLayers } from 'flow/settings/accessors'\nimport { useSegmentedPointCloud } from 'flow/scans/accessors'\n\nimport { PaintIcon } from 'Viewer/Interactors/icons'\nimport { ResetButton } from 'rd/UI/Buttons'\nimport { H3 } from 'common/styles/UI/Text/titles'\nimport ToolButton, { tools } from 'Viewer/Interactors/Tools'\nimport MenuBox, { MenuBoxContent } from 'rd/UI/MenuBox'\nimport Slider from 'rd/UI/Slider'\n\nconst hex2RGB = (hex) => {\n  return {\n    r: parseInt(hex[1] + hex[2], 16),\n    g: parseInt(hex[3] + hex[4], 16),\n    b: parseInt(hex[5] + hex[6], 16)\n  }\n}\n\nexport const Container = styled.div({\n  position: 'absolute',\n  top: 60,\n  left: 20,\n  display: 'flex',\n\n  '& :first-of-type > div': {\n    borderRadius: '2px 0 0 2px'\n  },\n\n  '& :last-of-type > div': {\n    borderRadius: '0 2px 2px 0'\n  }\n})\n\nconst LegendContainer = styled.div({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-between',\n  alignItems: 'center'\n})\n\nconst ColumnContainer = styled.div({}, (props) => {\n  return {\n    display: 'flex',\n    visibility: props.displayed ? 'visible' : 'hidden',\n    flexDirection: 'column',\n    marginLeft: 0,\n    marginRight: 0\n  }\n})\n\nconst ToolContainer = styled(Container)({})\n\n// Setting the default color values to make sure every component has a base color value in addition to the one given in their file\nlet defaults = {\n  defaultOrgan1Color: '#BD10E0',\n  defaultOrgan2Color: '#E79DF6',\n  defaultOrganOpacity: '0.5',\n  defaultMeshColor: '#96c0a7',\n  defaultMeshOpacity: '0.5',\n  defaultPointCloudColor: '#f8de96',\n  defaultPointCloudOpacity: '1',\n  defaultPointCloudSize: '1000',\n  defaultSkeletonColor: '#D0021B',\n  defaultSkeletonOpacity: '0.7'\n}\n\nfor (let key in defaults) {\n  if (!window.localStorage.getItem(key)) {\n    window.localStorage.setItem(key, defaults[key])\n  }\n}\n\nexport default function MiscInteractors () {\n  const [selectedAngle] = useSelectedAngle()\n  const [colors, setColors] = useColor()\n  const [resetDefaultColor] = useDefaultColors()\n  const [layerTools] = useLayerTools()\n  const [layers] = useLayers()\n  const [labels, setLabels] = useState()\n  const [, segmentation] = useSegmentedPointCloud()\n  const [legendPicker, setLegendPicker] = useState()\n  const [pointCloudZoom, setPointCloudZoom] = usePointCloudZoom()\n  const [pointCloudSize, setPointCloudSize] = usePointCloudSize()\n\n  useEffect(() => {\n    if (segmentation && segmentation.labels) {\n      setLabels(\n        segmentation.labels.filter(\n          (value, index, self) => self.indexOf(value) === index\n        )\n      )\n    }\n  }, [segmentation])\n\n  // This is probably the worst part of the interface. This is the row of tools appearing when you click on various layers.\n  // There is no links between the layer buttons and the tools associated to it.\n  // Improvement : Rework the interactors to have tools associated to specific layers. Its mostly the component hierarchy with some CSS\n  // most of what's done is working fine\n  return (\n    <ToolContainer>\n      <ColumnContainer displayed={layers.mesh}>\n        <ToolButton\n          toolsList={useLayerTools()}\n          tool={tools.colorPickers.mesh}\n          layer={layers.mesh}\n          interactor={{\n            isButton: true\n          }}\n          tooltipId='tooltip-mesh-color-picker'\n          icon={\n            <PaintIcon\n              isActivated={layerTools.activeTool === tools.colorPickers.mesh}\n            />\n          }\n        >\n          <SketchPicker\n            onChange={(color) => {\n              if (color.hex === 'transparent') return\n              setColors({\n                ...colors,\n                mesh: { rgb: color.hex, a: color.rgb.a }\n              })\n              window.localStorage.setItem('defaultMeshColor', color.hex)\n              window.localStorage.setItem(\n                'defaultMeshOpacity',\n                color.rgb.a.toString()\n              )\n            }}\n            // color={{ ...hex2RGB(colors.mesh.rgb), a: colors.mesh.a }}\n            color={{\n              ...hex2RGB(window.localStorage.getItem('defaultMeshColor')),\n              a: window.localStorage.getItem('defaultMeshOpacity')\n            }}\n          />\n          <ResetButton\n            onClick={() => {\n              window.localStorage.setItem(\n                'defaultMeshColor',\n                defaults.defaultMeshColor\n              )\n              window.localStorage.setItem(\n                'defaultMeshOpacity',\n                defaults.defaultMeshOpacity\n              )\n              resetDefaultColor('mesh')\n            }}\n          />\n        </ToolButton>\n      </ColumnContainer>\n      <ColumnContainer displayed={layers.pointCloud}>\n        <ToolButton\n          toolsList={useLayerTools()}\n          tool={tools.colorPickers.pointCloud}\n          layer={layers.pointCloud}\n          interactor={{\n            isButton: true\n          }}\n          tooltipId={'tooltip-point-cloud-color-picker'}\n          icon={\n            <PaintIcon\n              isActivated={\n                layerTools.activeTool === tools.colorPickers.pointCloud\n              }\n            />\n          }\n        >\n          <SketchPicker\n            onChange={(color) => {\n              if (color.hex === 'transparent') return\n              setColors({\n                ...colors,\n                pointCloud: { rgb: color.hex, a: color.rgb.a }\n              })\n              window.localStorage.setItem('defaultPointCloudColor', color.hex)\n              window.localStorage.setItem(\n                'defaultPointCloudOpacity',\n                color.rgb.a.toString()\n              )\n            }}\n            // color={{ ...hex2RGB(colors.pointCloud.rgb), a: colors.pointCloud.a }}\n            color={{\n              ...hex2RGB(window.localStorage.getItem('defaultPointCloudColor')),\n              a: window.localStorage.getItem('defaultPointCloudOpacity')\n            }}\n          />\n          <ResetButton\n            onClick={() => {\n              resetDefaultColor('pointCloud')\n              window.localStorage.setItem(\n                'defaultPointCloudColor',\n                defaults.defaultPointCloudColor\n              )\n              window.localStorage.setItem(\n                'defaultPointCloudOpacity',\n                defaults.defaultPointCloudOpacity\n              )\n            }}\n          />\n        </ToolButton>\n      </ColumnContainer>\n      <ColumnContainer displayed={layers.segmentedPointCloud}>\n        <ToolButton\n          toolsList={useLayerTools()}\n          tool={tools.colorPickers.segmentedPointCloud}\n          layer={layers.segmentedPointCloud}\n          Interactor={{\n            isButton: true\n          }}\n          tooltipId={'tooltip-segmentedpointcloud-color-picker'}\n          icon={\n            <PaintIcon\n              isActivated={\n                layerTools.activeTool === tools.colorPickers.segmentedPointCloud\n              }\n            />\n          }\n        >\n          {labels && colors.segmentedPointCloud.length\n            ? labels.map((d, i) => {\n              return (\n                <LegendContainer key={d}>\n                  <H3 style={{ fontSize: 13 }}> {d} </H3>\n                  <MenuBox\n                    activate={legendPicker === i}\n                    onClose={() => {\n                      setLegendPicker(null)\n                    }}\n                  >\n                    <div\n                      style={{\n                        width: 20,\n                        height: 20,\n                        marginLeft: 10,\n                        backgroundColor: colors.segmentedPointCloud[i],\n                        cursor: 'pointer'\n                      }}\n                      onClick={() => {\n                        setLegendPicker(i)\n                      }}\n                    />\n                    <MenuBoxContent>\n                      <SketchPicker\n                        disableAlpha\n                        onChange={(val) => {\n                          let copy = colors.segmentedPointCloud.slice()\n                          copy[i] = val.hex\n                          setColors({ ...colors, segmentedPointCloud: copy })\n                          window.localStorage.setItem(\n                            'defaultSegmentedColors',\n                            JSON.stringify(copy)\n                          )\n                        }}\n                        color={colors.segmentedPointCloud[i]}\n                      />\n                    </MenuBoxContent>\n                  </MenuBox>\n                </LegendContainer>\n              )\n            })\n            : null}\n        </ToolButton>\n      </ColumnContainer>\n      <ColumnContainer displayed={layers.skeleton}>\n        <ToolButton\n          toolsList={useLayerTools()}\n          tool={tools.colorPickers.skeleton}\n          layer={layers.skeleton}\n          interactor={{\n            isButton: true\n          }}\n          tooltipId={'tooltip-skeleton-color-picker'}\n          icon={\n            <PaintIcon\n              isActivated={\n                layerTools.activeTool === tools.colorPickers.skeleton\n              }\n            />\n          }\n        >\n          <SketchPicker\n            onChange={(color) => {\n              if (color.hex === 'transparent') return\n              setColors({\n                ...colors,\n                skeleton: { rgb: color.hex, a: color.rgb.a }\n              })\n              window.localStorage.setItem('defaultSkeletonColor', color.hex)\n              window.localStorage.setItem(\n                'defaultSkeletonOpacity',\n                color.rgb.a.toString()\n              )\n            }}\n            // color={{ ...hex2RGB(colors.skeleton.rgb), a: colors.skeleton.a }}\n            color={{\n              ...hex2RGB(window.localStorage.getItem('defaultSkeletonColor')),\n              a: window.localStorage.getItem('defaultSkeletonOpacity')\n            }}\n          />\n          <ResetButton\n            onClick={() => {\n              resetDefaultColor('skeleton')\n              window.localStorage.setItem(\n                'defaultSkeletonColor',\n                defaults.defaultSkeletonColor\n              )\n              window.localStorage.setItem(\n                'defaultSkeletonOpacity',\n                defaults.defaultSkeletonOpacity\n              )\n            }}\n          />\n        </ToolButton>\n      </ColumnContainer>\n      <ColumnContainer displayed={layers.angles}>\n        <ToolButton\n          toolsList={useLayerTools()}\n          tool={tools.colorPickers.organs}\n          layer={layers.angles}\n          interactor={{\n            isButton: true\n          }}\n          tooltipId={\n            selectedAngle === undefined || selectedAngle === null\n              ? 'tooltip-organ-global-color-picker'\n              : 'tooltip-organ-color-picker'\n          }\n          icon={\n            <PaintIcon\n              isActivated={layerTools.activeTool === tools.colorPickers.organs}\n            />\n          }\n        >\n          <SketchPicker\n            onChange={(color) => {\n              if (color.hex === 'transparent') return\n              let color2 = color.hsl\n              // Use a lighter color for the second organ of the pair\n              color2.l += 0.3\n              /* This is a bit ugly but very useful to change the brightness of\n               the color */\n              const color2String =\n                'hsl(' +\n                Math.round(color2.h) +\n                ', ' +\n                Math.round(color2.s * 100) +\n                '%, ' +\n                Math.round(color2.l * 100) +\n                '%)'\n              if (selectedAngle !== undefined && selectedAngle !== null) {\n                // We slice the array because it has to be an immutable change\n                let copy = colors.organs.slice()\n                const next = selectedAngle + 1\n                copy[selectedAngle] = { rgb: color.hex, a: color.rgb.a }\n                copy[next] = { rgb: color2String, a: color.rgb.a }\n                setColors({\n                  ...colors,\n                  organs: copy\n                })\n              } else {\n                setColors({\n                  ...colors,\n                  globalOrganColors: [\n                    { rgb: color.hex, a: color.rgb.a },\n                    { rgb: color2String, a: color.rgb.a }\n                  ]\n                })\n              }\n              window.localStorage.setItem('defaultOrgan1Color', color.hex)\n              window.localStorage.setItem('defaultOrgan2Color', color2String)\n              window.localStorage.setItem(\n                'defaultOrganOpacity',\n                color.rgb.a.toString()\n              )\n            }}\n            color={\n              selectedAngle !== undefined &&\n              selectedAngle !== null &&\n              colors.organs[selectedAngle]\n                ? {\n                  ...hex2RGB(\n                    window.localStorage.getItem('defaultOrgan1Color')\n                  ), // hex2RGB(colors.organs[selectedAngle].rgb)\n                  a: window.localStorage.getItem('defaultOrganOpacity')\n                }\n                : {\n                  ...hex2RGB(\n                    window.localStorage.getItem('defaultOrgan1Color')\n                  ), // hex2RGB(colors.organs[0].rgb)\n                  a: window.localStorage.getItem('defaultOrganOpacity')\n                }\n            }\n          />\n          <ResetButton\n            onClick={() => {\n              if (selectedAngle !== undefined && selectedAngle !== null) {\n                if (colors.organs.length > selectedAngle + 1) {\n                  let copy = colors.organs.slice()\n                  copy[selectedAngle] = null\n                  copy[selectedAngle + 1] = null\n                  setColors({\n                    ...colors,\n                    organs: copy\n                  })\n                }\n              } else {\n                window.localStorage.setItem(\n                  'defaultOrgan1Color',\n                  defaults.defaultOrgan1Color\n                )\n                window.localStorage.setItem(\n                  'defaultOrgan2Color',\n                  defaults.defaultOrgan2Color\n                )\n                window.localStorage.setItem(\n                  'defaultOrganOpacity',\n                  defaults.defaultOrganOpacity\n                )\n                resetDefaultColor('globalOrganColors')\n              }\n            }}\n          />\n        </ToolButton>\n      </ColumnContainer>\n\n      <ColumnContainer\n        style={{ marginTop: -9, marginLeft: 10 }}\n        displayed={\n          layers.segmentedPointCloud ||\n          layers.pointCloud ||\n          layers.pointCloudGroundTruth\n        }\n      >\n        <H3 style={{ backgroundColor: 'white', padding: 7.5 }}>\n          <FormattedMessage id='pointcloud-zoom' />\n        </H3>\n        <Slider\n          min={1}\n          max={4}\n          default={2}\n          step={0.1}\n          callback={(value) =>\n            setPointCloudZoom({ ...pointCloudZoom, level: value })\n          }\n        />\n      </ColumnContainer>\n      <ColumnContainer\n        style={{ marginTop: -9, marginLeft: 10 }}\n        displayed={\n          layers.segmentedPointCloud ||\n          layers.pointCloud ||\n          layers.pointCloudGroundTruth\n        }\n      >\n        <H3 style={{ backgroundColor: 'white', padding: 7.5 }}>\n          <FormattedMessage id='pointcloud-size' />\n        </H3>\n        <Slider\n          min={0.01}\n          max={1}\n          default={0.75}\n          step={0.01}\n          callback={(value) =>\n            setPointCloudSize({ ...pointCloudSize, sampleSize: value })\n          }\n        />\n      </ColumnContainer>\n    </ToolContainer>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport styled from '@emotion/styled'\n\nimport { useMisc, useCarousel } from 'flow/settings/accessors'\nimport { useSnapshot, useRuler, useAxisAlignedBoundingBox, useDefaultColors, useColor }\nfrom 'flow/interactions/accessors'\nimport ToolButton, { tools } from 'Viewer/Interactors/Tools'\nimport { H3, H2 } from 'common/styles/UI/Text/titles'\n\nimport { SnapIcon, PhotoSetIcon, RulerIcon, CropIcon, BackgroundColorIcon } from 'Viewer/Interactors/icons'\nimport { Interactor } from 'Viewer/Interactors'\n\nimport snapButton from 'common/assets/ico.snap.24x24.svg'\nimport downloadButton from 'common/assets/ico.download.24x24.svg'\n\nimport { ResetButton } from 'rd/UI/Buttons'\nimport Tooltip, { TooltipContent } from 'rd/UI/Tooltip'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { SketchPicker } from 'react-color'\n\nvar bgroundColor = '#000000'\n\nexport const Container = styled.div({\n  position: 'absolute',\n  top: 20,\n  right: 50,\n  display: 'flex',\n\n  '& :first-of-type > div': {\n    borderRadius: '2px 0 0 2px'\n  },\n\n  '& :last-of-type > div': {\n    borderRadius: '0 2px 2px 0'\n  }\n})\n\nconst ChooserContainer = styled.div({\n  display: 'flex',\n  flexDirection: 'column'\n})\n\nconst PhotoSetButtonContainer = styled.div({\n  cursor: 'pointer',\n  borderRadius: 5,\n  textAlign: 'center',\n  marginBottom: 5,\n  fontSize: 18,\n  lineHeight: 2,\n  padding: 2,\n  textTransform: 'uppercase',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    boxShadow: '1px 1px 3px 3px limegreen'\n  }\n}, (props) => ({\n  transition: 'all 0.3s ease',\n  opacity: props.active ? 1 : 0.4,\n  boxShadow: props.active ? '1px 1px 3px 3px limegreen' : 'none'\n}))\n\nconst MiscContainer = styled(Container)({})\n\nconst InputResolution = styled.input({\n  width: 70,\n  border: 0,\n  fontSize: '2em',\n  textAlign: 'center',\n  borderBottom: '2px solid black',\n  MozAppearance: 'textfield',\n  '&::-webkit-outer-spin-button, &::-webkit-inner-spin-button': {\n    WebkitAppearance: 'none',\n    margin: 0\n  },\n  '&:focus': {\n    transition: 'border-bottom 0.5s ease',\n    border: 0,\n    borderBottom: '3px solid #00a960',\n    outline: 0,\n    outlineOffset: 0,\n    padding: 0\n  }\n})\n\nconst HoverContainer = styled.div({\n  transition: 'all 1s ease',\n  opacity: '1',\n  cursor: 'pointer',\n  '&:hover': {\n    transition: 'all 1s ease',\n    opacity: '0.3'\n  }\n})\n\nconst SnapButtonImage = styled.div({\n  backgroundImage: `url(${snapButton})`,\n  width: 30,\n  height: 30,\n  backgroundSize: 'cover',\n  cursor: 'pointer'\n})\n\nconst DownloadButtonImage = styled.div({\n  '@keyframes fadein': {\n    from: { opacity: 0 },\n    to: { opacity: 1 }\n  },\n  animation: 'fadein 1s ease',\n  backgroundImage: `url(${downloadButton})`,\n  backgroundSize: 'cover',\n  width: 30,\n  height: 30,\n  cursor: 'pointer'\n})\n\nfunction Point3D (props) {\n  const [aabb, setAABB] = useAxisAlignedBoundingBox()\n  const id = props.id\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 25px 100px)',\n        gridTemplateRows: '25px',\n        gridGap: '5px'\n      }}\n    >\n      <div style={{ gridColumn: '1/2', margin: 'auto' }} >X</div>\n      <input\n        style={{ gridColumn: '2/3' }}\n        type='number'\n        onChange={(event) => {\n          setAABB({\n            ...aabb,\n            [id]: {\n              ...aabb[id],\n              x: isNaN(event.target.value) ? 0 : event.target.value\n            }\n          })\n        }}\n        value={aabb[id].x}\n      />\n      <div style={{ gridColumn: '3/4', margin: 'auto' }} > Y </div>\n      <input\n        style={{ gridColumn: '4/5' }}\n        type='number'\n        onChange={(event) => {\n          setAABB({\n            ...aabb,\n            [id]: {\n              ...aabb[id],\n              y: isNaN(event.target.value) ? 0 : event.target.value\n            }\n          })\n        }}\n        value={aabb[id].y}\n      />\n      <div style={{ gridColumn: '5/6', margin: 'auto' }}>Z</div>\n      <input\n        style={{ gridColumn: '6/7' }}\n        type='number'\n        onChange={(event) => {\n          setAABB({\n            ...aabb,\n            [id]: {\n              ...aabb[id],\n              z: isNaN(event.target.value) ? 0 : event.target.value\n            }\n          })\n        }}\n        value={aabb[id].z}\n      />\n    </div>\n  )\n}\n\nfunction PhotoSetButton ({ set }) {\n  const [carousel, setCarousel] = useCarousel()\n  return <PhotoSetButtonContainer\n    active={carousel.photoSet === set}\n    onClick={() => setCarousel({ ...carousel, photoSet: set })}\n  >\n    <FormattedMessage id={'photoset-' + set.toLowerCase()} />\n  </PhotoSetButtonContainer>\n}\n\nfunction DownloadButton (props) {\n  return <Tooltip>\n    <TooltipContent>\n      <H3> <FormattedMessage id='tooltip-download-snapshot' /> </H3>\n    </TooltipContent>\n    <DownloadButtonImage\n    />\n  </Tooltip>\n}\n\nfunction SnapButton (props) {\n  return <Tooltip>\n    <TooltipContent>\n      <H3> <FormattedMessage id='tooltip-take-snapshot' /> </H3>\n    </TooltipContent>\n    <SnapButtonImage />\n  </Tooltip>\n}\n\nfunction GenerateDownloadButton (props) {\n  return <a\n    style={{ margin: 'auto', cursor: 'pointer' }}\n    href={props.image}\n    download='snapshot.png'\n    data-testid='gendlbutton'\n    onClick={\n      !props.image ? props.onGenerateClick : null\n    }\n  >\n    <H3> {props.image\n      ? <DownloadButton /> : <SnapButton />} </H3>\n  </a>\n}\n\nfunction ImagePreview (props) {\n  return <Tooltip>\n    <HoverContainer\n      onClick={props.onClick}>\n      <img\n        src={props.image}\n        width='100%'\n        height='100%'\n        style={{\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          marginTop: 0,\n          marginBottom: 10,\n          maxWidth: '100%',\n          height: 'auto'\n        }}\n        // TODO: Update the react-intl version to translate the alt\n        alt='Preview of the snapshot'\n      />\n    </HoverContainer>\n    <TooltipContent\n      style={{ top: '50%' }}>\n      <H3> <FormattedMessage id='tooltip-delete-snapshot' /> </H3>\n    </TooltipContent>\n  </Tooltip>\n}\n\nexport default function () {\n  const [snapshot, setSnapshot] = useSnapshot()\n  const [snapWidth, setSnapWidth] = useState(0)\n  const [snapHeight, setSnapHeight] = useState(0)\n  const [misc, setMisc] = useMisc()\n  const [ruler, setRuler] = useRuler()\n  const [aabb, setAABB] = useAxisAlignedBoundingBox()\n  const [resetDefaultColor] = useDefaultColors()\n  const [colors, setColors] = useColor()\n\n  useEffect(() => {\n    if (misc.activeTool === null) {\n      setSnapshot({\n        ...snapshot,\n        snapResolution: null\n      })\n    }\n  }, [misc.activeTool])\n\n  return (\n    <MiscContainer>\n      <ToolButton\n        toolsList={useMisc()}\n        tool={tools.misc.aabb}\n        tooltipId='tooltip-tool-aabb'\n        icon={<CropIcon isActivated={misc.activeTool === tools.misc.aabb} />}\n      >\n        <div\n          style={{\n            minWidth: '200px'\n          }}\n        >\n          <H3 style={{ padding: 7.5, margin: 0 }}>\n            <FormattedMessage id='bbox-min' />\n          </H3>\n          <Point3D id='min' />\n          <H3 style={{ backgroundColor: 'white', padding: 7.5, margin: 0 }}>\n            <FormattedMessage id='bbox-max' />\n          </H3>\n          <Point3D id='max' />\n          <ResetButton\n            style={{ marginBottom: '10px' }}\n            onClick={() => setAABB({ ...aabb, enforceReset: true })}\n          />\n          <div style={{ display: 'grid', gridTemplateColumns: 'auto 200px auto', gridTemplateRows: '25px' }}>\n            <CopyToClipboard\n              text={JSON.stringify(\n                {\n                  bounding_box: {\n                    x: [aabb.min.x, aabb.max.x],\n                    y: [aabb.min.y, aabb.max.y],\n                    z: [aabb.min.z, aabb.max.z]\n                  }\n                },\n                (key, val) => {\n                  if (!isNaN(val)) { return parseFloat(val) }\n\n                  return val\n                },\n                2\n              )}>\n              <button style={{ gridColumn: '2/3' }}>Copy to clipboard</button>\n            </CopyToClipboard>\n          </div>\n        </div>\n      </ToolButton>\n\n      <ToolButton\n        data-testid='ruler'\n        toolsList={useMisc()}\n        tool={tools.misc.ruler}\n        tooltipId='tooltip-ruler'\n        icon={<RulerIcon isActivated={misc.activeTool === tools.misc.ruler} />}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'space-between',\n            justifyItems: 'center'\n          }}\n        >\n          <H3>\n            <FormattedMessage id='ruler-scale' />\n          </H3>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              margin: 'auto',\n              marginBottom: 10\n            }}\n          >\n            <InputResolution\n              type='number'\n              min='0.0001'\n              step='1'\n              placeholder='scale'\n              onChange={(e) => {\n                const value = e.target.value > 0.0001 ? e.target.value : 0.0001\n                setMisc({ ...misc, scale: value })\n              }}\n              value={misc.scale}\n            />{' '}\n            <H3> cm </H3>\n          </div>\n          <Tooltip>\n            <Interactor\n              style={{ margin: 'auto', width: '100%', marginBottom: 10 }}\n              activated={ruler.scaling}\n              isButton\n              onClick={() => {\n                if (!ruler.measuring) {\n                  setRuler({ ...ruler, scaling: !ruler.scaling })\n                }\n              }}\n            >\n              <H2>\n                {' '}\n                <FormattedMessage id='scale-button' />{' '}\n              </H2>\n            </Interactor>\n            <TooltipContent>\n              <H3>\n                {' '}\n                <FormattedMessage id='tooltip-scale-button' />{' '}\n              </H3>\n            </TooltipContent>\n          </Tooltip>\n          <Tooltip>\n            <Interactor\n              isDisabled={!ruler.scaleSet}\n              style={{ margin: 'auto', width: '100%' }}\n              activated={ruler.measuring}\n              isButton\n              onClick={() => {\n                if (!ruler.scaling) {\n                  setRuler({\n                    ...ruler,\n                    measuring: !ruler.measuring\n                  })\n                }\n              }}\n            >\n              <H2>\n                {' '}\n                <FormattedMessage id='measure-button' />{' '}\n              </H2>\n            </Interactor>\n            <TooltipContent>\n              <H3>\n                <FormattedMessage\n                  id={\n                    ruler.scaleSet\n                      ? 'tooltip-measure-button'\n                      : 'tooltip-scale-needed'\n                  }\n                />\n              </H3>\n            </TooltipContent>\n          </Tooltip>\n          <H3 style={{ margin: 'auto', marginTop: 10 }}>\n            <FormattedMessage id='current-measure' />\n          </H3>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              margin: 'auto',\n              marginBottom: 10\n            }}\n          >\n            <InputResolution\n              style={{ margin: 'auto' }}\n              value={\n                ruler.measure ? (misc.scale * ruler.measure).toFixed(3) : 0\n              }\n              readOnly\n            />\n            <H3> cm </H3>\n          </div>\n        </div>\n      </ToolButton>\n      <ToolButton\n        toolsList={useMisc()}\n        tool={tools.misc.snapshot}\n        icon={\n          <SnapIcon isActivated={misc.activeTool === tools.misc.snapshot} />\n        }\n        interactor={{\n          isButton: true\n        }}\n        tooltipId='tooltip-snapshot'\n      >\n        <div\n          style={{\n            minWidth: 200,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignContent: 'center'\n          }}\n          data-testid='snapshot-menu'\n        >\n          <Tooltip\n            style={{\n              padding: 0,\n              margin: 'auto',\n              width: 40\n            }}\n          >\n            <ResetButton\n              onClick={() => {\n                setSnapWidth(snapshot.trueResolution.width)\n                setSnapHeight(snapshot.trueResolution.height)\n              }}\n            />\n            <TooltipContent>\n              <H3>\n                {' '}\n                <FormattedMessage id='tooltip-reset-resolution' />{' '}\n              </H3>\n            </TooltipContent>\n          </Tooltip>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              margin: 'auto'\n            }}\n          >\n            <InputResolution\n              type='number'\n              min='0'\n              max='4096'\n              step='10'\n              placeholder='X'\n              onChange={(e) => {\n                setSnapWidth(\n                  parseInt(Math.min(Math.max(e.target.value, 0), 4096))\n                )\n              }}\n              value={\n                snapWidth ||\n                (snapshot.trueResolution ? snapshot.trueResolution.width : 0)\n              }\n            />{' '}\n            <H3> X </H3>\n            <InputResolution\n              type='number'\n              min='0'\n              max='2160'\n              step='10'\n              placeholder='Y'\n              onChange={(e) => {\n                setSnapHeight(\n                  parseInt(Math.min(Math.max(e.target.value, 0), 2160))\n                )\n              }}\n              value={\n                snapHeight ||\n                (snapshot.trueResolution ? snapshot.trueResolution.height : 0)\n              }\n            />\n          </div>\n          {snapshot.image ? (\n            <div>\n              <H3 style={{ textAlign: 'center' }}>\n                <FormattedMessage id='snapshot-preview' />\n              </H3>\n              <ImagePreview\n                image={snapshot.image}\n                onClick={() => {\n                  setSnapshot({\n                    ...snapshot,\n                    image: null\n                  })\n                }}\n              />\n            </div>\n          ) : null}\n          <GenerateDownloadButton\n            image={snapshot.image}\n            onGenerateClick={() => {\n              setSnapshot({\n                ...snapshot,\n                snapResolution: { width: snapWidth, height: snapHeight }\n              })\n            }}\n          />\n        </div>\n      </ToolButton>\n      <ToolButton\n        toolsList={useMisc()}\n        tool={tools.misc.photoSets}\n        icon={\n          <PhotoSetIcon\n            isActivated={misc.activeTool === tools.misc.photoSets}\n          />\n        }\n        interactor={{\n          isButton: true\n        }}\n        tooltipId='tooltip-photoset'\n      >\n        <div data-testid='photoset-menu'>\n          <ChooserContainer>\n            <PhotoSetButton set='images' />\n            <PhotoSetButton set='undistorted' />\n            <PhotoSetButton set='masks' />\n          </ChooserContainer>\n        </div>\n      </ToolButton>\n      <ToolButton data-testid='background'\n        toolsList={useMisc()}\n        tool={tools.colorPickers.background}\n        interactor={{\n          isButton: true\n        }}\n        tooltipId='tooltip-background-color-picker'\n        icon={<BackgroundColorIcon\n          isActivated={misc.activeTool === tools.colorPickers.background} />}\n      >\n        <div data-testid='background-color'>\n          <SketchPicker disableAlpha\n          // color={localStorage.getItem(\"defaultBgroundColor\")}\n            onChange={\n              (color) => {\n                setColors({\n                  ...colors,\n                  background: { rgb: color.hex, a: 1.0 }\n                })\n                window.localStorage.setItem('defaultBgroundColor', color.hex)\n              }\n            }\n            color={colors.background.rgb}\n          />\n        </div>\n        <ResetButton\n          onClick={\n            () => {\n              window.localStorage.setItem('defaultBgroundColor', bgroundColor)\n              resetDefaultColor('background')\n            }\n          }\n        />\n      </ToolButton>\n    </MiscContainer>\n  )\n}\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport { useState, useEffect } from 'react'\n\nconst useMouse = () => {\n  const [ state, setState ] = useState({ x: 0, y: 0 })\n\n  useEffect(() => {\n    const handler = (e) => {\n      setState({\n        x: e.clientX,\n        y: e.clientY\n      })\n    }\n\n    window.addEventListener('mousemove', handler)\n    return () => {\n      window.removeEventListener('resize', handler)\n      window.removeEventListener('mousemove', handler)\n    }\n  }, [1])\n\n  return state\n}\n\nexport default useMouse\n\nexport const useElementMouse = (element) => {\n  const [ state, setState ] = useState({ x: 0, y: 0 })\n\n  useEffect(() => {\n    const handler = (e) => {\n      setState({\n        x: e.layerX,\n        y: e.layerY\n      })\n    }\n\n    if (element.current) {\n      element.current.addEventListener('mousemove', handler)\n    }\n    return () => element.current.removeEventListener('resize', handler)\n  }, [1])\n\n  return state\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\n\nimport MenuBox, { MenuBoxContent } from 'rd/UI/MenuBox'\nimport { useOrganInfo, useColor, useSelectedPoints, useClickedPoint, useLabels, useSelectedLabel, useSelectionMethod } from 'flow/interactions/accessors'\nimport { FormattedMessage } from 'react-intl'\n\nimport { H2 } from 'common/styles/UI/Text/titles'\nimport useMouse from 'rd/tools/hooks/mouse'\n\nconst ContextMenuContainer = styled.div({\n  zIndex: 2000,\n  position: 'fixed'\n}, (props) => ({\n  top: props.pos.y,\n  left: props.pos.x\n}))\n\nconst MenuContainer = styled.div({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'space-between'\n})\n\nconst OptionContainer = styled.div({\n  cursor: 'pointer',\n  border: 'solid 1px transparent',\n  transition: 'all 0.3 ease',\n  '&:hover': {\n    transition: 'all 0.3s ease',\n    border: 'solid 1px limegreen'\n  },\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  padding: 2\n})\n\nconst OptionTitle = styled(H2)({\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    color: 'limegreen'\n  }\n})\n\nconst Option = (props) => {\n  return <OptionContainer {...props}>\n    <OptionTitle> { props.children } </OptionTitle>\n  </OptionContainer>\n}\n\nfunction Bubble (props) {\n  const [colors] = useColor()\n  const bubbleColor = colors.organs.length >= props.organInfo &&\n    colors.organs[props.organInfo - 1]\n    ? colors.organs[props.organInfo - 1].rgb\n    : colors.globalOrganColors[props.organInfo % 2 ? 0 : 1].rgb\n\n  const handleMouseDown = (e) => {\n    if (e.button !== 0) return\n    props.setDragging(true)\n    props.setRel({\n      x: (e.pageX || e.clientX) - props.pos.x,\n      y: (e.pageY || e.clientY) - props.pos.y\n    })\n  }\n\n  const handleMouseUp = (e) => {\n    if (!props.dragging) return\n    props.setDragging(false)\n  }\n\n  const handleMouseMove = (e) => {\n    if (!props.dragging) return\n    props.setPos({\n      x: (e.pageX || e.clientX) - props.rel.x,\n      y: (e.pageY || e.clientY) - props.rel.y\n    })\n  }\n\n  /* The event listener needs to be removed and set back to have a fresh\n    'dragging' state */\n  useEffect(\n    () => {\n      if (props.dragging) {\n        document.addEventListener('mousemove', handleMouseMove)\n      }\n      return () => {\n        if (props.dragging) {\n          document.removeEventListener('mousemove', handleMouseMove)\n        }\n      }\n    }, [props.dragging, props.rel])\n\n  return <div data-testid={props['data-testid']}\n    style={{\n      position: 'fixed',\n      top: props.pos.y,\n      left: props.pos.x,\n      cursor: props.dragging ? 'grabbing' : 'grab',\n      zIndex: 2000\n    }}>\n    <MenuBox\n      activate\n      {...props.menuBox}\n    >\n      <MenuBoxContent\n        style={{\n          backgroundColor: bubbleColor\n        }}\n\n      >\n        <div data-testid={props['data-testid'] + '-content'}\n          onMouseDown={handleMouseDown}\n          onMouseUp={handleMouseUp}\n        >\n          {/* } Organ info can then be fetched from anywhere,\n        for the moment it only prints the organ number for testing purposes\n      { */}\n          <H2 style={{\n            color: 'white',\n            mixBlendMode: 'difference' // Makes sure the text is visible\n          }}>\n            <FormattedMessage\n              id='organ-bubble'\n              values={{ ORGAN_NUMBER: props.organInfo }}\n            />\n          </H2>\n        </div>\n      </MenuBoxContent>\n    </MenuBox>\n  </div>\n}\n\nfunction ContextMenu (props) {\n  const [, setSelectedPoints] = useSelectedPoints()\n  const [, setSelectionMethod] = useSelectionMethod()\n  const [, setClickedPoint] = useClickedPoint()\n\n  return <ContextMenuContainer pos={props.pos} >\n    <MenuBox\n      activate\n      {...props.menuBox}\n    >\n      <MenuBoxContent\n        style={{\n          backgroundColor: '#ffffffaa'\n        }}>\n        <MenuContainer>\n          <Option\n            onClick={() => {\n              setSelectedPoints([props.point])\n              setClickedPoint(null)\n            }}>\n            Select this point\n          </Option>\n          <Option\n            onClick={() => {\n              setSelectionMethod('proximity')\n            }}>\n            Select close points of the same label\n          </Option>\n          <Option\n            onClick={() => {\n              setSelectionMethod('same label')\n            }}>\n            Select all points with the same label\n          </Option>\n          <Option\n            onClick={() => {\n              setSelectionMethod('sphere')\n            }}>\n            Make a custom selection from this point\n          </Option>\n        </MenuContainer>\n      </MenuBoxContent>\n    </MenuBox>\n  </ContextMenuContainer>\n}\n\nfunction LabelMenu (props) {\n  const [labels] = useLabels()\n  const [, setSelectedLabel] = useSelectedLabel()\n\n  return <ContextMenuContainer pos={props.pos} >\n    <MenuBox\n      activate\n      {...props.menuBox}\n    >\n      <MenuBoxContent\n        style={{\n          backgroundColor: '#ffffffaa'\n        }} >\n        {\n          labels.map((d) => <Option\n            key={d}\n            onClick={() => {\n              setSelectedLabel(d)\n            }}>\n            {d}\n          </Option>\n          )\n        }\n      </MenuBoxContent>\n    </MenuBox>\n  </ContextMenuContainer>\n}\n\nexport default function OverlayInteractors () {\n  const [tempBubblePos, setTempBubblePos] = useState(null)\n  const [organInfo, setOrganInfo] = useOrganInfo()\n  const [clickedPoint, setClickedPoint] = useClickedPoint()\n  const [selectedPoints, setSelectedPoints] = useSelectedPoints()\n  const [selectionMethod] = useSelectionMethod()\n  const [bubblePositions, setBubblePositions] = useState([])\n  const [contextPosition, setContextPosition] = useState(null)\n  const [draggingBubble, setDraggingBubble] = useState()\n  const [, setSelectedLabel] = useSelectedLabel()\n  const [rel, setRel] = useState({ x: 0, y: 0 })\n  const mouse = useMouse()\n\n  useEffect(\n    () => {\n      if (organInfo) {\n        setTempBubblePos(mouse)\n      } else {\n        setTempBubblePos(null)\n      }\n    },\n    [organInfo]\n  )\n\n  useEffect(\n    () => {\n      if (clickedPoint) setContextPosition(mouse)\n    },\n    [clickedPoint]\n  )\n\n  return <div data-testid='overlay-interactors'>\n    {clickedPoint && contextPosition && !selectionMethod\n      ? <ContextMenu\n        point={clickedPoint}\n        pos={contextPosition}\n        menuBox={{\n          onClose: () => {\n            setClickedPoint(null)\n          }\n        }}\n      />\n      : null\n    }\n    {!clickedPoint && contextPosition && selectedPoints && selectedPoints.length\n      ? <LabelMenu\n        pos={contextPosition}\n        onAnyClick={() => {\n          setSelectedPoints(null)\n          setSelectedLabel(null)\n        }}\n        menuBox={{\n          onClose: () => { setSelectedPoints(null) }\n        }}\n      />\n      : null\n    }\n    {(tempBubblePos && !bubblePositions[organInfo])\n      ? <Bubble data-testid={'temp-bubble-' + organInfo}\n        pos={tempBubblePos}\n        organInfo={organInfo}\n        dragging={draggingBubble === organInfo}\n        setDragging={(b) => {\n          setDraggingBubble(b ? organInfo : null)\n        }}\n        rel={rel}\n        setRel={setRel}\n        setPos={(pos) => {\n          setTempBubblePos(null)\n          let copy = bubblePositions.slice()\n          copy[organInfo] = pos\n          setBubblePositions(copy)\n          setOrganInfo(null)\n        }}\n        menuBox={{\n          onClose: () => {\n            setTempBubblePos(null)\n            setOrganInfo(null)\n          }\n        }}\n      />\n      : null\n    }\n    {bubblePositions.map((pos, id) => {\n      if (pos) {\n        return <Bubble data-testid={'permanent-bubble-' + id}\n          key={id}\n          pos={pos}\n          organInfo={id}\n          dragging={draggingBubble === id}\n          rel={rel}\n          setRel={setRel}\n          setDragging={(b) => {\n            setDraggingBubble(b ? id : null)\n          }}\n          setPos={(pos) => {\n            let copy = bubblePositions.slice()\n            copy[id] = pos\n            setBubblePositions(copy)\n          }}\n          menuBox={{\n            onClose: () => {\n              let copy = bubblePositions.slice()\n              copy[id] = null\n              setBubblePositions(copy)\n              if (organInfo === id) setOrganInfo(null)\n            }\n          }} />\n      }\n      return null\n    })}\n  </div>\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { FormattedMessage } from 'react-intl'\n\nimport Tooltip, { TooltipContent } from 'rd/UI/Tooltip'\n\nimport { H3 } from 'common/styles/UI/Text/titles'\n\nimport { Interactor } from './index'\n\nimport { useLayers } from 'flow/settings/accessors'\nimport { useScan, useScanFiles } from 'flow/scans/accessors'\n\nimport { IconStateCatcher } from 'rd/UI/Icon'\n\nimport { PointCloudIcon } from './icons'\n\nexport const Container = styled.div({\n  position: 'absolute',\n  bottom: 40,\n  left: 20,\n  display: 'flex',\n\n  '& :first-of-type > div': {\n    borderRadius: '2px 0 0 2px'\n  },\n\n  '& :last-of-type > div': {\n    borderRadius: '0 2px 2px 0'\n  }\n})\n\nexport default function GroundTruthInteractors () {\n  const [layers, setLayers] = useLayers()\n  const [scan] = useScan()\n  const [pointCloudGroundTruthGeometry] = useScanFiles(scan)[2]\n\n  return <Container>\n    <Tooltip>\n      <Interactor\n        isDisabled={!pointCloudGroundTruthGeometry}\n        activated={layers.pointCloudGroundTruth}\n        onClick={() => setLayers({ ...layers, pointCloudGroundTruth: !layers.pointCloudGroundTruth })}\n      >\n        <IconStateCatcher style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }} >\n          <PointCloudIcon isActivated={layers.pointCloudGroundTruth} />\n        </IconStateCatcher>\n      </Interactor>\n      <TooltipContent\n        top\n        style={{\n          right: -119\n        }}>\n        <H3>\n          <FormattedMessage id='tooltip-pcd-ground-truth' />\n        </H3>\n      </TooltipContent>\n    </Tooltip>\n  </Container>\n}\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport React from 'react'\nimport t from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport { omit } from 'lodash'\nimport Color from 'color'\n\nimport { darkGreen } from 'common/styles/colors'\n\nimport LayersInteractors from './layers'\nimport CameraInteractors from './camera'\nimport PanelsInteractor from './panels'\nimport ToolInteractors from './tools'\nimport MiscInteractors from './misc'\nimport OverlayInteractors from './overlay'\nimport GroundTruthInteractors from './pcdGroundTruth'\n\nexport const Interactor = styled(\n  (props) => <div data-testid={props['data-testid'] || 'interactor'}\n    {...omit(props, ['activated', 'isDisabled', 'onClick', 'isButton'])}\n    onClick={!props.isDisabled ? props.onClick : () => {}}\n  />\n)({\n  width: 41,\n  height: 30,\n  margin: 1,\n  boxShadow: '0 0px 0px 0 rgba(10,61,33,0.15)',\n  transition: 'all 0.15s ease',\n  cursor: 'pointer',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  '& img': {\n    transition: 'all 0.15s ease',\n    userDrag: 'none',\n    userSelect: 'none'\n  },\n\n  '&:hover': {\n    zIndex: 1\n  }\n}, (props) => {\n  if (!props.isDisabled) {\n    return {\n      background: props.activated\n        ? 'white'\n        : Color(darkGreen).alpha(0.4).toString(),\n\n      '& img': {\n        filter: props.activated\n          ? ''\n          : 'invert(100%) brightness(500%)'\n      },\n\n      '&:hover': {\n        background: props.activated\n          ? Color('white').alpha(0.6).toString()\n          : Color(darkGreen).alpha(0.6).toString()\n      },\n\n      '&:active': {\n        transform: 'scale(1.10)',\n        boxShadow: '0 1px 1px 0 rgba(10,61,33,0.15)',\n        transition: 'all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n\n        background: props.activated\n          ? Color(darkGreen).alpha(0.4).toString()\n          : 'white',\n\n        '& img': {\n          filter: props.activated\n            ? 'invert(100%) brightness(500%) !important'\n            : 'invert(0%) !important'\n        }\n      }\n    }\n  } else {\n    return {\n      opacity: 1,\n      background: Color(darkGreen).alpha(0.1).toString(),\n      cursor: 'not-allowed',\n\n      '& img': {\n        opacity: 0.5,\n        filter: 'invert(100%) brightness(500%)'\n      }\n    }\n  }\n})\n\n/* This is very dumb, but it's used as a workaround for a bug in the Docz\n  package. Displaying props of a styled component doesn't work as expected,\n  but issues on the package's repository are just closed and not given\n  attention. Docz doesn't want to fix their bugs, if you think this is\n  ugly I agree, but complain to Docz... */\nexport const DocInteractor = (props) => <Interactor {...props} />\nDocInteractor.propTypes = {\n  /**\n   * Indicates whether the interactor should be displayed as 'active' (with\n   * a white background), or as 'inactive' (with a dark gray background).\n   */\n  activated: t.bool\n}\n\nexport {\n  LayersInteractors,\n  ToolInteractors,\n  CameraInteractors,\n  PanelsInteractor,\n  MiscInteractors,\n  OverlayInteractors,\n  GroundTruthInteractors\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Props, Playground } from 'docz'\nimport { Interactor, DocInteractor } from './index'\nimport { useState } from 'react'\nimport ToolButton, { tools } from './Tools'\nimport ObjectFormatter from '../../../doc/components/objectFormatter'\nimport { SketchPicker } from 'react-color'\nexport const divStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'center'\n};\n\nconst layoutProps = {\n  divStyle\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"3d-view-interactors\"\n    }}>{`3D view interactors`}</h1>\n    <h2 {...{\n      \"id\": \"types-of-interactors\"\n    }}>{`Types of interactors`}</h2>\n    <p>{`If you're launched the app and opened a plant reconstruction, you noticed there\nare some interactors in the 3d view. Some enable or disable layers, other make\ncolor pickers or other tools appear (with the help of a\n`}<a parentName=\"p\" {...{\n        \"href\": \"/Components/UI#menubox\"\n      }}>{`MenuBox`}</a>{` for example).`}</p>\n    <p>{`Here's a quick summary of each type of interactors:`}</p>\n    <h3 {...{\n      \"id\": \"camera\"\n    }}>{`Camera`}</h3>\n    <p>{`These 2 interactors are in the center and control the display of\ncameras in 3D space. The second one resets the 3D view.`}</p>\n    <h3 {...{\n      \"id\": \"layers\"\n    }}>{`Layers`}</h3>\n    <p>{`Those are what controls the display of the different layers of the 3D view.`}</p>\n    <h3 {...{\n      \"id\": \"tools\"\n    }}>{`Tools`}</h3>\n    <p>{`Those are displayed below the layers, and contain some tools related to each\ncorresponding layer, for example color pickers for each layer.`}</p>\n    <h3 {...{\n      \"id\": \"misc\"\n    }}>{`Misc`}</h3>\n    <p>{`Those are on the right and contain miscellaneous tools like background color\nor the snapshot tool.`}</p>\n    <h3 {...{\n      \"id\": \"overlay\"\n    }}>{`Overlay`}</h3>\n    <p>{`This is a special set of interactors. Designed to display stuff on top of the\n3D view, at the time of writing this, it only manages the bubbles that appear\nwhen clicking on an organ.`}</p>\n    <h2 {...{\n      \"id\": \"interactor\"\n    }}>{`Interactor`}</h2>\n    <h3 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Interactor`}</inlineCode>{` component is the basic interactive building block of those\nbuttons.`}</p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={DocInteractor} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const [active, setActive] = useState(false)\\n  return (\\n    <Interactor\\n      activated={active}\\n      onClick={() => {\\n        setActive(!active)\\n      }}\\n    />\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Props,\n      Playground,\n      Interactor,\n      DocInteractor,\n      useState,\n      ToolButton,\n      tools,\n      ObjectFormatter,\n      SketchPicker\n    }} __codesandbox={``} mdxType=\"Playground\">\n  {() => {\n        const [active, setActive] = useState(false);\n        return <Interactor activated={active} onClick={() => {\n          setActive(!active);\n        }} mdxType=\"Interactor\" />;\n      }}\n    </Playground>\n    <p>{`This example is simply an interactor that toggles from active to inactive\nwhen clicking on it. Interactors are basically a button, of course, it needs\nto be associated with things like `}<a parentName=\"p\" {...{\n        \"href\": \"/Components/UI#menubox\"\n      }}>{`MenuBox`}</a></p>\n    <h2 {...{\n      \"id\": \"toolbutton\"\n    }}>{`Toolbutton`}</h2>\n    <h3 {...{\n      \"id\": \"description-1\"\n    }}>{`Description`}</h3>\n    <p>{`The Toolbutton is not a functional component in itself but a group\nof components assembled together to make it easier to create tools.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` file contains, alongside the ToolButton component, an object\ncalled tools, that associates tool names with numbers to keep track\nof which tool is currently active easily.`}</p>\n    <p>{`Here's the tool object :`}</p>\n    <ObjectFormatter object={tools} mdxType=\"ObjectFormatter\" />\n    <h3 {...{\n      \"id\": \"props-1\"\n    }}>{`Props`}</h3>\n    <Props of={ToolButton} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"example-1\"\n    }}>{`Example`}</h3>\n\n    <Playground __position={4} __code={'{() => {\\n    const toolsList = useState({\\n      activeTool: null,\\n    })\\n    return (\\n      <div style={divStyle}>\\n        <ToolButton\\n          toolsList={toolsList}\\n          tool={tools.colorPickers.mesh}\\n          layer={true}\\n          tooltipId=\\\"Tooltip 1\\\"\\n        >\\n          <SketchPicker />\\n        \\n        <ToolButton\\n          toolsList={toolsList}\\n          tool={tools.colorPickers.skeleton}\\n          layer={true}\\n          tooltipId=\\\"Tooltip 2\\\"\\n        >\\n          <SketchPicker />\\n        </ToolButton>\\n      </div>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      Props,\n      Playground,\n      Interactor,\n      DocInteractor,\n      useState,\n      ToolButton,\n      tools,\n      ObjectFormatter,\n      SketchPicker\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const toolsList = useState({\n          activeTool: null\n        });\n        return <div style={divStyle}>\n      <ToolButton toolsList={toolsList} tool={tools.colorPickers.mesh} layer={true} tooltipId='Tooltip 1' mdxType=\"ToolButton\">\n        <SketchPicker mdxType=\"SketchPicker\" />\n      </ToolButton>\n      <ToolButton toolsList={toolsList} tool={tools.colorPickers.skeleton} layer={true} tooltipId='Tooltip 2' mdxType=\"ToolButton\">\n        <SketchPicker mdxType=\"SketchPicker\" />\n      </ToolButton>\n    </div>;\n      }}\n    </Playground>\n    <p>{`In this example, you can see we use the ToolButton to display color pickers.\nSince the object passed to the `}<inlineCode parentName=\"p\">{`toolsList`}</inlineCode>{` component is the same in both\nToolButtons, the tools are mutually exclusive. Try opening the second one while\nthe first one is already open, and you'll see that the first tool will close\non its own.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","module.exports = __webpack_public_path__ + \"static/img/ico.background_color.21x21.8b71be3e.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.bounding_box.21x21.56f5c385.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.crop.21x21.a37ec592.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.deselect.20x20.1ee41c14.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.download.24x24.8c208fb3.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.expand-white.14x14.d6beadb6.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.internodes.21x21.1e3b50d1.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.mesh.21x21.32c5b0f3.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.paint.23x23.6771b4ca.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.photoset.24x24.b687d5f8.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.point_cloud.21x21.46b54994.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.reset.25x25.4db59bfb.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.ruler.21x21.5dca55be.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.segmented_point_cloud.21x21.18a8d8e6.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.shrink-white.14x14.67dc59c4.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.skeleton.21x21.9f48a07d.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.snap.24x24.9c3a16da.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.zoom-in.14x14.9e57ed36.svg\";","module.exports = __webpack_public_path__ + \"static/img/ico.zoom-out.14x14.5e5300ca.svg\";","import React, { useEffect, useRef, Children, cloneElement, useState } from 'react'\nimport t from 'prop-types'\nimport useBB from 'rd/tools/hooks/bb'\nimport styled from '@emotion/styled'\n\nimport closePicto from 'common/assets/ico.deselect.20x20.svg'\n\nconst InvisibleContent = styled.div({\n  pointerEvents: 'none',\n  display: 'block',\n  minWidth: '25px',\n  height: 'auto',\n  position: 'static',\n  visibility: 'hidden'\n})\n\nconst Close = styled.div({\n  position: 'absolute',\n  backgroundImage: `url(${closePicto})`,\n  top: 0,\n  right: -25,\n  width: 20,\n  height: 20,\n  zIndex: 1000,\n  cursor: 'pointer'\n})\n\n/* This is a general component for display menus that appear when\n  a button is clicked. This component is heavily inspired by the Tooltip\n  component. */\nexport default function MenuBox (props) {\n  const contentRef = useRef()\n  const [ref, BB] = useBB(false)\n  const [contentBb, setContentBb] = useState()\n\n  if (Array.isArray(props.children)) {\n    var childrenWithoutContent = props.children\n      .filter((d) => d.type !== MenuBoxContent)\n    var childrenWithContent = props.children\n      .filter((d) => d.type === MenuBoxContent)\n  } else {\n    if (props.children.type === MenuBoxContent) {\n      childrenWithContent = props.children\n      childrenWithoutContent = null\n    } else {\n      childrenWithContent = null\n      childrenWithoutContent = props.children\n    }\n  }\n\n  useEffect(() => {\n    if (props.callOnChange) props.callOnChange()\n  }, props.watchChange)\n\n  useEffect(\n    () => {\n      if (contentRef.current) {\n        setContentBb(contentRef.current.children[0].getBoundingClientRect())\n      }\n    },\n    [contentRef.current]\n  )\n\n  return <div data-testid='menubox'\n    ref={ref}\n    style={props.style}\n  >\n    {childrenWithoutContent}\n    {\n      props.activate\n        ? Children.map(childrenWithContent, (child) => {\n          return cloneElement(child, { parentBb: BB,\n            contentBb: contentBb,\n            onClose: props.onClose })\n        })\n        : null\n    }\n    {\n      !contentBb && <InvisibleContent ref={contentRef}>\n        {childrenWithContent}\n      </InvisibleContent>\n    }\n  </div>\n}\n\n// Description of the props for the docs\nMenuBox.propTypes = {\n  /**\n   * When this prop is true, the box is displayed.\n   */\n  activate: t.bool,\n  /**\n   * Function to call when pressing the close button.\n   */\n  onClose: t.func,\n  /**\n   * Function to call when one of the variables in `watchChange` is different.\n   */\n  callOnChange: t.func,\n  /**\n   * A list of variables to watch. When one of them is different\n   * `callOnChange` is called.\n   */\n  watchChange: t.array\n}\n\nconst ContentContainer = styled.div({\n  minWidth: '25px',\n  height: 'auto',\n  position: 'absolute',\n  boxShadow: '0 1px 1px 0 rgba(10, 61, 33, 0.15)',\n  borderRadius: 2,\n  padding: '0px 12px',\n  background: 'white',\n  marginTop: 10,\n  zIndex: 1000\n}, (props) => {\n  return {\n    top: (props.contentBb && props.top)\n      ? -props.contentBb.height - 20\n      : 'normal',\n    marginLeft: props.contentBb\n      // This is used to prevent the element from going out of the\n      // screen on the left side\n      ? (props.contentBb.x > props.contentBb.width / 2)\n        ? ((props.contentBb.x + props.contentBb.width) > window.innerWidth)\n          ? (\n            -(props.contentBb.width || 0) / 2\n          ) + (props.parentBb.width * 0.5) - 50\n          : (\n            -(props.contentBb.width || 0) / 2\n          ) + (props.parentBb.width * 0.5)\n        : -props.contentBb.x\n      : 0\n  }\n})\n\nexport function MenuBoxContent (props) {\n  return <ContentContainer\n    top={props.top}\n    className={props.className}\n    parentBb={props.parentBb}\n    contentBb={props.contentBb}\n    style={props.style}\n  >\n    <Close\n      data-testid='close-button'\n      onClick={props.onClose}\n    />\n    <div>\n      {props.children}\n    </div>\n  </ContentContainer>\n}\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport React, { Children, cloneElement, useState, useRef, useEffect } from 'react'\n\nimport useBB from 'rd/tools/hooks/bb'\nimport styled from '@emotion/styled'\n\nconst InivisibleContent = styled.div({\n  pointerEvents: 'none',\n  display: 'block',\n  minWidth: '25px',\n  height: 'auto',\n  position: 'static',\n  visibility: 'hidden'\n})\n\nexport default function (props) {\n  const contentRef = useRef()\n  const [ref, BB] = useBB(false)\n  const [contentBb, setContentBb] = useState()\n  const [hovered, setHovered] = useState(false)\n\n  const childrenWithoutContent = props.children\n    .filter((d) => d.type !== TooltipContent)\n  const childrenContent = props.children\n    .filter((d) => d.type === TooltipContent)\n\n  useEffect(\n    () => {\n      if (contentRef.current) {\n        setContentBb(contentRef.current.children[0].getBoundingClientRect())\n      }\n    },\n    [contentRef.current]\n  )\n\n  return <div data-testid='tooltip'\n    ref={ref}\n    onMouseEnter={() => setHovered(true)}\n    onMouseLeave={() => setHovered(false)}\n    style={{\n      cursor: 'help',\n      ...props.style\n    }}\n  >\n    {childrenWithoutContent}\n    {\n      hovered\n        ? Children.map(childrenContent, (child) => {\n          return cloneElement(child, { parentBb: BB, contentBb: contentBb })\n        })\n        : null\n    }\n    {\n      !contentBb && <InivisibleContent ref={contentRef}>\n        {childrenContent}\n      </InivisibleContent>\n    }\n  </div>\n}\n\nconst ContentContainer = styled.div({\n  minWidth: '25px',\n  height: 'auto',\n  position: 'absolute',\n  boxShadow: '0 1px 1px 0 rgba(10,61,33,0.15)',\n  borderRadius: 2,\n  padding: '0px 12px',\n  background: 'white',\n  pointerEvents: 'none',\n  marginTop: 10,\n  zIndex: 1000\n}, (props) => {\n  return {\n    top: (props.contentBb && props.top)\n      ? -props.contentBb.height - 20\n      : 'normal',\n    marginLeft: props.contentBb\n      ? (props.contentBb.x > props.contentBb.width / 2)\n        ? (\n          -(props.contentBb.width || 0) / 2\n        ) + (props.parentBb.width * 0.5)\n        : -props.contentBb.x\n      : 0\n  }\n})\n\nexport function TooltipContent (props) {\n  return <ContentContainer\n    top={props.top}\n    className={props.className}\n    parentBb={props.parentBb}\n    contentBb={props.contentBb}\n    style={props.style}\n  >\n    <div>\n      {props.children}\n    </div>\n  </ContentContainer>\n}\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport { useEffect } from 'react'\n\nvar config = {\n  attributes: true,\n  characterData: true,\n  subtree: false,\n  childList: true\n}\n\nfunction useMutationObserver (ref, callback, options = config) {\n  useEffect(() => {\n    if (ref.current) {\n      const observer = new window.MutationObserver((mutationList, observer) => {\n        console.log(mutationList)\n        callback(mutationList, observer)\n      })\n\n      observer.observe(ref.current, options)\n\n      return () => observer.disconnect()\n    }\n  }, [ref.current, callback, options])\n}\n\nexport default useMutationObserver\n","/*\n\nPlant 3D Explorer: An browser application for 3D scanned\nplants.\n\nCopyright (C) 2019-2020 Sony Computer Science Laboratories\n              & Centre national de la recherche scientifique (CNRS)\n\nAuthors:\nNicolas Forestier, Ludovic Riffault, Léo Gourven, Benoit Lucet (DataVeyes)\nTimothée Wintz, Peter Hanappe (Sony CSL)\nFabrice Besnard (CNRS)\n\nThis program is free software: you can redistribute it and/or\nmodify it under the terms of the GNU Affero General Public\nLicense as published by the Free Software Foundation, either\nversion 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see\n<https://www.gnu.org/licenses/>.\n\n*/\nimport { useState, useRef, useEffect } from 'react'\n\nimport useMutationObserver from './mutationObserver'\n\nexport default function (obeserver = true) {\n  const ref = useRef()\n  const [value, setValue] = useState()\n\n  useEffect(\n    () => {\n      if (ref.current) setValue(ref.current.getBoundingClientRect())\n    },\n    [ref.current]\n  )\n\n  if (obeserver) {\n    useMutationObserver(\n      ref,\n      () => setValue(ref.current.getBoundingClientRect())\n    )\n  }\n\n  return [\n    ref,\n    value\n  ]\n}\n"],"sourceRoot":""}